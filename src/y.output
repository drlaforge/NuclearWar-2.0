Terminals unused in grammar

   L_INLINE_FUN


Grammar

    0 $accept: all $end

    1 all: program

    2 program: program def possible_semi_colon
    3        | %empty

    4 possible_semi_colon: %empty
    5                    | ';'

    6 note_start: %empty

    7 $@1: %empty

    8 $@2: %empty

    9 def: type L_IDENTIFIER $@1 '(' argument ')' $@2 function_body
   10    | name_list ';'
   11    | struct_decl
   12    | inheritance
   13    | default_visibility

   14 @3: %empty

   15 function_body: @3 block
   16              | ';'

   17 $@4: %empty

   18 $@5: %empty

   19 $@6: %empty

   20 inline_func: L_FUNC inline_opt_type $@4 inline_opt_args $@5 inline_opt_context $@6 block

   21 $@7: %empty

   22 inline_func: L_BEGIN_INLINE $@7 statements inline_comma_expr L_END_INLINE

   23 inline_opt_args: %empty
   24                | '(' argument ')'

   25 inline_opt_type: %empty
   26                | basic_type

   27 inline_opt_context: %empty
   28                   | ':' inline_context_list inline_semi

   29 inline_semi: %empty
   30            | ';'

   31 inline_context_list: %empty
   32                    | context_decl
   33                    | inline_context_list ';' context_decl

   34 context_decl: local_name_list

   35 inline_comma_expr: %empty
   36                  | comma_expr

   37 struct_decl: type_modifier_list L_STRUCT L_IDENTIFIER ';'

   38 $@8: %empty

   39 struct_decl: type_modifier_list L_STRUCT L_IDENTIFIER $@8 opt_base_struct '{' opt_member_list '}' ';'

   40 opt_base_struct: %empty
   41                | '(' L_IDENTIFIER ')'

   42 opt_member_list: %empty
   43                | member_list

   44 member_list: member
   45            | member_list member

   46 member: member_name_list ';'

   47 member_name_list: basic_non_void_type L_IDENTIFIER
   48                 | member_name_list ',' optional_stars L_IDENTIFIER

   49 inheritance: inheritance_qualifiers L_INHERIT string_constant ';'

   50 inheritance_qualifiers: inheritance_modifier_list
   51                       | inheritance_qualifier inheritance_qualifiers

   52 inheritance_modifier: L_VIRTUAL

   53 inheritance_modifier_list: type_modifier_list
   54                          | inheritance_modifier_list inheritance_modifier type_modifier_list

   55 inheritance_qualifier: type L_IDENTIFIER

   56 default_visibility: L_DEFAULT inheritance_qualifiers ';'

   57 optional_stars: %empty
   58               | optional_stars '*'

   59 type: type_modifier_list opt_basic_type

   60 non_void_type: type_modifier_list opt_basic_non_void_type

   61 type_modifier_list: %empty
   62                   | type_modifier_list type_modifier

   63 type_modifier: L_NO_MASK
   64              | L_STATIC
   65              | L_PRIVATE
   66              | L_PUBLIC
   67              | L_VARARGS
   68              | L_PROTECTED
   69              | L_NOSAVE
   70              | L_DEPRECATED
   71              | L_VISIBLE

   72 opt_basic_type: basic_type
   73               | %empty

   74 opt_basic_non_void_type: basic_non_void_type
   75                        | %empty

   76 basic_non_void_type: single_basic_non_void_type
   77                    | basic_non_void_type '|' single_basic_non_void_type

   78 single_basic_non_void_type: L_STATUS
   79                           | L_INT
   80                           | L_STRING_DECL
   81                           | L_OBJECT
   82                           | L_CLOSURE_DECL
   83                           | L_SYMBOL_DECL
   84                           | L_FLOAT_DECL
   85                           | L_MAPPING
   86                           | L_MIXED
   87                           | L_STRUCT identifier
   88                           | single_basic_non_void_type '*'
   89                           | '<' basic_non_void_type '>'

   90 basic_type: basic_non_void_type
   91           | L_VOID

   92 cast: '(' single_basic_non_void_type ')'

   93 decl_cast: '(' '{' basic_type '}' ')'

   94 identifier: L_IDENTIFIER
   95           | L_LOCAL

   96 argument: %empty
   97         | L_VOID
   98         | argument_list

   99 argument_list: new_arg_name
  100              | argument_list ',' new_arg_name

  101 new_arg_name: non_void_type L_IDENTIFIER
  102             | non_void_type L_LOCAL

  103 name_list: type L_IDENTIFIER

  104 @9: %empty

  105 name_list: type L_IDENTIFIER @9 L_ASSIGN expr0
  106          | name_list ',' optional_stars L_IDENTIFIER

  107 @10: %empty

  108 name_list: name_list ',' optional_stars L_IDENTIFIER @10 L_ASSIGN expr0

  109 block: '{' statements_block '}'

  110 $@11: %empty

  111 statements_block: $@11 statements

  112 statements: %empty
  113           | statements local_name_list ';'
  114           | statements statement

  115 local_name_list: basic_type L_IDENTIFIER
  116                | basic_type L_LOCAL

  117 @12: %empty

  118 local_name_list: basic_type L_IDENTIFIER @12 L_ASSIGN expr0

  119 @13: %empty

  120 local_name_list: basic_type L_LOCAL @13 L_ASSIGN expr0
  121                | local_name_list ',' optional_stars L_IDENTIFIER
  122                | local_name_list ',' optional_stars L_LOCAL

  123 @14: %empty

  124 local_name_list: local_name_list ',' optional_stars L_IDENTIFIER @14 L_ASSIGN expr0

  125 @15: %empty

  126 local_name_list: local_name_list ',' optional_stars L_LOCAL @15 L_ASSIGN expr0

  127 statement: comma_expr ';'
  128          | error ';'
  129          | cond
  130          | while
  131          | do
  132          | for
  133          | foreach
  134          | switch
  135          | return ';'
  136          | block
  137          | ';'
  138          | L_BREAK ';'
  139          | L_CONTINUE ';'

  140 return: L_RETURN
  141       | L_RETURN comma_expr

  142 @16: %empty

  143 @17: %empty

  144 while: @16 L_WHILE '(' comma_expr ')' @17 statement

  145 @18: %empty

  146 $@19: %empty

  147 do: @18 L_DO statement L_WHILE $@19 '(' comma_expr ')' ';'

  148 @20: %empty

  149 @21: %empty

  150 @22: %empty

  151 @23: %empty

  152 for: L_FOR '(' @20 for_init_expr ';' @21 for_expr ';' @22 for_expr ')' @23 statement

  153 for_init_expr: %empty
  154              | comma_expr_decl

  155 comma_expr_decl: expr_decl

  156 $@24: %empty

  157 comma_expr_decl: comma_expr_decl $@24 ',' expr_decl

  158 expr_decl: expr0
  159          | local_name_lvalue L_ASSIGN expr0
  160          | local_name_lvalue

  161 for_expr: %empty
  162         | comma_expr

  163 @25: %empty

  164 @26: %empty

  165 $@27: %empty

  166 foreach: L_FOREACH '(' @25 foreach_vars foreach_in @26 foreach_expr ')' $@27 statement

  167 foreach_vars: foreach_var_decl
  168             | foreach_vars ',' foreach_var_decl

  169 foreach_var_decl: foreach_var_lvalue

  170 foreach_var_lvalue: local_name_lvalue
  171                   | name_var_lvalue

  172 foreach_in: identifier
  173           | ':'

  174 foreach_expr: expr0
  175             | expr0 L_RANGE expr0

  176 $@28: %empty

  177 switch: L_SWITCH '(' comma_expr ')' $@28 '{' switch_block '}'

  178 switch_block: switch_block switch_statements
  179             | switch_statements

  180 switch_statements: switch_label statements_block

  181 switch_label: case
  182             | default

  183 case: L_CASE case_label ':'
  184     | L_CASE case_label L_RANGE case_label ':'

  185 case_label: constant
  186           | string_constant

  187 default: L_DEFAULT ':'

  188 condStart: L_IF '(' comma_expr ')'

  189 cond: condStart statement optional_else

  190 optional_else: %empty

  191 @29: %empty

  192 optional_else: L_ELSE @29 statement

  193 constant: constant '|' constant
  194         | constant '^' constant
  195         | constant '&' constant
  196         | constant L_EQ constant
  197         | constant L_NE constant
  198         | constant '>' constant
  199         | constant L_GE constant
  200         | constant '<' constant
  201         | constant L_LE constant
  202         | constant L_LSH constant
  203         | constant L_RSH constant
  204         | constant L_RSHL constant
  205         | constant '+' constant
  206         | constant '-' constant
  207         | constant '*' constant
  208         | constant '%' constant
  209         | constant '/' constant
  210         | '(' constant ')'
  211         | '-' constant
  212         | L_NOT constant
  213         | '~' constant
  214         | L_NUMBER

  215 string_constant: L_STRING
  216                | string_constant '+' L_STRING
  217                | L_STRING L_STRING
  218                | string_constant '+' L_STRING L_STRING
  219                | '(' string_constant ')'

  220 comma_expr: expr0

  221 $@30: %empty

  222 comma_expr: comma_expr $@30 ',' expr0

  223 @31: %empty

  224 expr0: lvalue L_ASSIGN @31 expr0
  225      | error L_ASSIGN expr0

  226 @32: %empty

  227 @33: %empty

  228 expr0: expr0 '?' @32 expr0 @33 ':' expr0

  229 @34: %empty

  230 expr0: expr0 L_LOR @34 expr0

  231 @35: %empty

  232 expr0: expr0 L_LAND @35 expr0
  233      | expr0 '|' expr0
  234      | expr0 '^' expr0
  235      | expr0 '&' expr0
  236      | expr0 L_EQ expr0
  237      | expr0 L_NE expr0
  238      | expr0 '>' expr0
  239      | expr0 L_GE expr0
  240      | expr0 '<' expr0
  241      | expr0 L_LE expr0
  242      | expr0 L_LSH expr0
  243      | expr0 L_RSH expr0
  244      | expr0 L_RSHL expr0

  245 @36: %empty

  246 expr0: expr0 '+' @36 expr0
  247      | expr0 '-' expr0
  248      | expr0 '*' expr0
  249      | expr0 '%' expr0
  250      | expr0 '/' expr0
  251      | decl_cast expr0
  252      | cast expr0
  253      | pre_inc_dec lvalue
  254      | L_NOT expr0
  255      | '~' expr0
  256      | '-' expr0
  257      | lvalue L_INC
  258      | lvalue L_DEC
  259      | lvalue_reference
  260      | lvalue_reference L_ASSIGN expr0
  261      | expr4

  262 lvalue_reference: '&' name_lvalue
  263                 | '&' '(' lvalue ')'
  264                 | '&' '(' function_call ')'

  265 pre_inc_dec: L_INC
  266            | L_DEC

  267 expr4: function_call
  268      | inline_func
  269      | catch
  270      | sscanf
  271      | parse_command
  272      | L_STRING
  273      | L_NUMBER
  274      | L_CLOSURE
  275      | L_SYMBOL
  276      | L_FLOAT
  277      | '(' note_start comma_expr ')'
  278      | '(' '{' note_start expr_list '}' ')'
  279      | L_QUOTED_AGGREGATE note_start expr_list '}' ')'

  280 $@37: %empty

  281 expr4: '(' '[' ':' note_start $@37 expr0 ']' ')'
  282      | '(' '[' note_start m_expr_list ']' ')'
  283      | '(' '<' note_start '>' ')'
  284      | '(' '<' note_start error ')'

  285 @38: %empty

  286 expr4: '(' '<' identifier '>' @38 note_start opt_struct_init ')'
  287      | L_IDENTIFIER
  288      | L_LOCAL
  289      | expr4 L_ARROW struct_member_name
  290      | expr4 index_expr
  291      | expr4 index_range
  292      | expr4 '[' expr0 ',' expr0 ']'

  293 name_lvalue: L_IDENTIFIER
  294            | L_LOCAL

  295 lvalue: name_lvalue
  296       | expr4 index_expr
  297       | expr4 '[' expr0 ',' expr0 ']'
  298       | expr4 index_range
  299       | expr4 L_ARROW struct_member_name
  300       | L_DUMMY

  301 name_var_lvalue: name_lvalue

  302 local_name_lvalue: basic_type L_IDENTIFIER
  303                  | basic_type L_LOCAL

  304 index_expr: '[' expr0 ']'
  305           | '[' '<' expr0 ']'
  306           | '[' '>' expr0 ']'

  307 index_range: '[' L_RANGE expr0 ']'
  308            | '[' L_RANGE '<' expr0 ']'
  309            | '[' L_RANGE '>' expr0 ']'
  310            | '[' expr0 L_RANGE expr0 ']'
  311            | '[' expr0 L_RANGE '<' expr0 ']'
  312            | '[' '<' expr0 L_RANGE expr0 ']'
  313            | '[' '<' expr0 L_RANGE '<' expr0 ']'
  314            | '[' expr0 L_RANGE '>' expr0 ']'
  315            | '[' '>' expr0 L_RANGE expr0 ']'
  316            | '[' '<' expr0 L_RANGE '>' expr0 ']'
  317            | '[' '>' expr0 L_RANGE '<' expr0 ']'
  318            | '[' '>' expr0 L_RANGE '>' expr0 ']'
  319            | '[' expr0 L_RANGE ']'
  320            | '[' '<' expr0 L_RANGE ']'
  321            | '[' '>' expr0 L_RANGE ']'

  322 expr_list: %empty
  323          | expr_list2
  324          | expr_list2 ','

  325 expr_list2: expr0
  326           | expr_list2 ',' expr0

  327 arg_expr_list: %empty
  328              | arg_expr_list2

  329 arg_expr_list2: expr0
  330               | expr0 L_ELLIPSIS
  331               | arg_expr_list2 ',' expr0
  332               | arg_expr_list2 ',' expr0 L_ELLIPSIS

  333 m_expr_list: %empty
  334            | m_expr_list2
  335            | m_expr_list2 ','
  336            | expr_list2
  337            | expr_list2 ','

  338 m_expr_list2: expr0 m_expr_values
  339             | m_expr_list2 ',' expr0 m_expr_values

  340 m_expr_values: ':' expr0
  341              | m_expr_values ';' expr0

  342 struct_member_name: identifier
  343                   | L_STRING L_STRING
  344                   | L_STRING
  345                   | '(' expr0 ')'

  346 opt_struct_init: %empty
  347                | opt_struct_init2 possible_comma
  348                | opt_struct_init2 ',' error

  349 possible_comma: %empty
  350               | ','

  351 opt_struct_init2: struct_init
  352                 | opt_struct_init2 ',' struct_init

  353 struct_init: identifier ':' expr0
  354            | expr0

  355 @39: %empty

  356 function_call: function_name @39 '(' arg_expr_list ')'

  357 @40: %empty

  358 function_call: expr4 L_ARROW call_other_name @40 '(' arg_expr_list ')'

  359 call_other_name: identifier
  360                | L_STRING L_STRING
  361                | L_STRING
  362                | '(' expr0 ')'

  363 function_name: L_IDENTIFIER
  364              | L_LOCAL
  365              | L_COLON_COLON L_IDENTIFIER
  366              | L_COLON_COLON L_LOCAL
  367              | anchestor L_COLON_COLON L_IDENTIFIER
  368              | anchestor L_COLON_COLON L_LOCAL

  369 anchestor: L_IDENTIFIER
  370          | L_STRING L_STRING
  371          | L_STRING

  372 @41: %empty

  373 catch: L_CATCH @41 '(' comma_expr note_start opt_catch_mods ')'

  374 opt_catch_mods: ';' opt_catch_mod_list
  375               | %empty

  376 opt_catch_mod_list: opt_catch_mod_list ',' opt_catch_modifier
  377                   | opt_catch_modifier

  378 opt_catch_modifier: identifier
  379                   | identifier expr0

  380 sscanf: L_SSCANF note_start '(' expr0 ',' expr0 lvalue_list ')'

  381 parse_command: L_PARSE_COMMAND note_start '(' expr0 ',' expr0 ',' expr0 lvalue_list ')'

  382 lvalue_list: %empty
  383            | lvalue_list ',' lvalue


Terminals, with rules where they appear

$end (0) 0
'%' (37) 208 249
'&' (38) 195 235 262 263 264
'(' (40) 9 24 41 92 93 144 147 152 166 177 188 210 219 263 264 277
    278 281 282 283 284 286 345 356 358 362 373 380 381
')' (41) 9 24 41 92 93 144 147 152 166 177 188 210 219 263 264 277
    278 279 281 282 283 284 286 345 356 358 362 373 380 381
'*' (42) 58 88 207 248
'+' (43) 205 216 218 246
',' (44) 48 100 106 108 121 122 124 126 157 168 222 292 297 324 326
    331 332 335 337 339 348 350 352 376 380 381 383
'-' (45) 206 211 247 256
'/' (47) 209 250
':' (58) 28 173 183 184 187 228 281 340 353
';' (59) 5 10 16 30 33 37 39 46 49 56 113 127 128 135 137 138 139 147
    152 341 374
'<' (60) 89 200 240 283 284 286 305 308 311 312 313 316 317 320
'>' (62) 89 198 238 283 286 306 309 314 315 316 317 318 321
'?' (63) 228
'[' (91) 281 282 292 297 304 305 306 307 308 309 310 311 312 313 314
    315 316 317 318 319 320 321
']' (93) 281 282 292 297 304 305 306 307 308 309 310 311 312 313 314
    315 316 317 318 319 320 321
'^' (94) 194 234
'{' (123) 39 93 109 177 278
'|' (124) 77 193 233
'}' (125) 39 93 109 177 278 279
'~' (126) 213 255
error (256) 128 225 284 348
L_ASSIGN (258) 105 108 118 120 124 126 159 224 225 260
L_ARROW (259) 289 299 358
L_BREAK (260) 138
L_CASE (261) 183 184
L_CATCH (262) 373
L_CLOSURE (263) 274
L_CLOSURE_DECL (264) 82
L_COLON_COLON (265) 365 366 367 368
L_CONTINUE (266) 139
L_DEC (267) 258 266
L_DEFAULT (268) 56 187
L_DO (269) 147
L_DUMMY (270) 300
L_ELLIPSIS (271) 330 332
L_ELSE (272) 192
L_EQ (273) 196 236
L_FUNC (274) 20
L_BEGIN_INLINE (275) 22
L_END_INLINE (276) 22
L_FLOAT (277) 276
L_FLOAT_DECL (278) 84
L_FOR (279) 152
L_FOREACH (280) 166
L_GE (281) 199 239
L_IDENTIFIER (282) 9 37 39 41 47 48 55 94 101 103 105 106 108 115 118
    121 124 287 293 302 363 365 367 369
L_IF (283) 188
L_INC (284) 257 265
L_INHERIT (285) 49
L_INLINE_FUN (286)
L_INT (287) 79
L_LAND (288) 232
L_LE (289) 201 241
L_LOCAL (290) 95 102 116 120 122 126 288 294 303 364 366 368
L_LOR (291) 230
L_LSH (292) 202 242
L_MAPPING (293) 85
L_MIXED (294) 86
L_NE (295) 197 237
L_NO_MASK (296) 63
L_NOSAVE (297) 69
L_DEPRECATED (298) 70
L_NOT (299) 212 254
L_NUMBER (300) 214 273
L_OBJECT (301) 81
L_PARSE_COMMAND (302) 381
L_PRIVATE (303) 65
L_PROTECTED (304) 68
L_PUBLIC (305) 66
L_QUOTED_AGGREGATE (306) 279
L_RANGE (307) 175 184 307 308 309 310 311 312 313 314 315 316 317 318
    319 320 321
L_RETURN (308) 140 141
L_RSH (309) 203 243
L_RSHL (310) 204 244
L_SSCANF (311) 380
L_STATIC (312) 64
L_STATUS (313) 78
L_STRING (314) 215 216 217 218 272 343 344 360 361 370 371
L_STRING_DECL (315) 80
L_STRUCT (316) 37 39 87
L_SWITCH (317) 177
L_SYMBOL (318) 275
L_SYMBOL_DECL (319) 83
L_VARARGS (320) 67
L_VIRTUAL (321) 52
L_VISIBLE (322) 71
L_VOID (323) 91 97
L_WHILE (324) 144 147
LOWER_THAN_ELSE (325)


Nonterminals, with rules where they appear

$accept (92)
    on left: 0
all (93)
    on left: 1, on right: 0
program (94)
    on left: 2 3, on right: 1 2
possible_semi_colon (95)
    on left: 4 5, on right: 2
note_start (96)
    on left: 6, on right: 277 278 279 281 282 283 284 286 373 380 381
def (97)
    on left: 9 10 11 12 13, on right: 2
$@1 (98)
    on left: 7, on right: 9
$@2 (99)
    on left: 8, on right: 9
function_body (100)
    on left: 15 16, on right: 9
@3 (101)
    on left: 14, on right: 15
inline_func (102)
    on left: 20 22, on right: 268
$@4 (103)
    on left: 17, on right: 20
$@5 (104)
    on left: 18, on right: 20
$@6 (105)
    on left: 19, on right: 20
$@7 (106)
    on left: 21, on right: 22
inline_opt_args (107)
    on left: 23 24, on right: 20
inline_opt_type (108)
    on left: 25 26, on right: 20
inline_opt_context (109)
    on left: 27 28, on right: 20
inline_semi (110)
    on left: 29 30, on right: 28
inline_context_list (111)
    on left: 31 32 33, on right: 28 33
context_decl (112)
    on left: 34, on right: 32 33
inline_comma_expr (113)
    on left: 35 36, on right: 22
struct_decl (114)
    on left: 37 39, on right: 11
$@8 (115)
    on left: 38, on right: 39
opt_base_struct (116)
    on left: 40 41, on right: 39
opt_member_list (117)
    on left: 42 43, on right: 39
member_list (118)
    on left: 44 45, on right: 43 45
member (119)
    on left: 46, on right: 44 45
member_name_list (120)
    on left: 47 48, on right: 46 48
inheritance (121)
    on left: 49, on right: 12
inheritance_qualifiers (122)
    on left: 50 51, on right: 49 51 56
inheritance_modifier (123)
    on left: 52, on right: 54
inheritance_modifier_list (124)
    on left: 53 54, on right: 50 54
inheritance_qualifier (125)
    on left: 55, on right: 51
default_visibility (126)
    on left: 56, on right: 13
optional_stars (127)
    on left: 57 58, on right: 48 58 106 108 121 122 124 126
type (128)
    on left: 59, on right: 9 55 103 105
non_void_type (129)
    on left: 60, on right: 101 102
type_modifier_list (130)
    on left: 61 62, on right: 37 39 53 54 59 60 62
type_modifier (131)
    on left: 63 64 65 66 67 68 69 70 71, on right: 62
opt_basic_type (132)
    on left: 72 73, on right: 59
opt_basic_non_void_type (133)
    on left: 74 75, on right: 60
basic_non_void_type (134)
    on left: 76 77, on right: 47 74 77 89 90
single_basic_non_void_type (135)
    on left: 78 79 80 81 82 83 84 85 86 87 88 89, on right: 76 77 88
    92
basic_type (136)
    on left: 90 91, on right: 26 72 93 115 116 118 120 302 303
cast (137)
    on left: 92, on right: 252
decl_cast (138)
    on left: 93, on right: 251
identifier (139)
    on left: 94 95, on right: 87 172 286 342 353 359 378 379
argument (140)
    on left: 96 97 98, on right: 9 24
argument_list (141)
    on left: 99 100, on right: 98 100
new_arg_name (142)
    on left: 101 102, on right: 99 100
name_list (143)
    on left: 103 105 106 108, on right: 10 106 108
@9 (144)
    on left: 104, on right: 105
@10 (145)
    on left: 107, on right: 108
block (146)
    on left: 109, on right: 15 20 136
statements_block (147)
    on left: 111, on right: 109 180
$@11 (148)
    on left: 110, on right: 111
statements (149)
    on left: 112 113 114, on right: 22 111 113 114
local_name_list (150)
    on left: 115 116 118 120 121 122 124 126, on right: 34 113 121
    122 124 126
@12 (151)
    on left: 117, on right: 118
@13 (152)
    on left: 119, on right: 120
@14 (153)
    on left: 123, on right: 124
@15 (154)
    on left: 125, on right: 126
statement (155)
    on left: 127 128 129 130 131 132 133 134 135 136 137 138 139, on right:
    114 144 147 152 166 189 192
return (156)
    on left: 140 141, on right: 135
while (157)
    on left: 144, on right: 130
@16 (158)
    on left: 142, on right: 144
@17 (159)
    on left: 143, on right: 144
do (160)
    on left: 147, on right: 131
@18 (161)
    on left: 145, on right: 147
$@19 (162)
    on left: 146, on right: 147
for (163)
    on left: 152, on right: 132
@20 (164)
    on left: 148, on right: 152
@21 (165)
    on left: 149, on right: 152
@22 (166)
    on left: 150, on right: 152
@23 (167)
    on left: 151, on right: 152
for_init_expr (168)
    on left: 153 154, on right: 152
comma_expr_decl (169)
    on left: 155 157, on right: 154 157
$@24 (170)
    on left: 156, on right: 157
expr_decl (171)
    on left: 158 159 160, on right: 155 157
for_expr (172)
    on left: 161 162, on right: 152
foreach (173)
    on left: 166, on right: 133
@25 (174)
    on left: 163, on right: 166
@26 (175)
    on left: 164, on right: 166
$@27 (176)
    on left: 165, on right: 166
foreach_vars (177)
    on left: 167 168, on right: 166 168
foreach_var_decl (178)
    on left: 169, on right: 167 168
foreach_var_lvalue (179)
    on left: 170 171, on right: 169
foreach_in (180)
    on left: 172 173, on right: 166
foreach_expr (181)
    on left: 174 175, on right: 166
switch (182)
    on left: 177, on right: 134
$@28 (183)
    on left: 176, on right: 177
switch_block (184)
    on left: 178 179, on right: 177 178
switch_statements (185)
    on left: 180, on right: 178 179
switch_label (186)
    on left: 181 182, on right: 180
case (187)
    on left: 183 184, on right: 181
case_label (188)
    on left: 185 186, on right: 183 184
default (189)
    on left: 187, on right: 182
condStart (190)
    on left: 188, on right: 189
cond (191)
    on left: 189, on right: 129
optional_else (192)
    on left: 190 192, on right: 189
@29 (193)
    on left: 191, on right: 192
constant (194)
    on left: 193 194 195 196 197 198 199 200 201 202 203 204 205 206
    207 208 209 210 211 212 213 214, on right: 185 193 194 195 196
    197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212
    213
string_constant (195)
    on left: 215 216 217 218 219, on right: 49 186 216 218 219
comma_expr (196)
    on left: 220 222, on right: 36 127 141 144 147 162 177 188 222
    277 373
$@30 (197)
    on left: 221, on right: 222
expr0 (198)
    on left: 224 225 228 230 232 233 234 235 236 237 238 239 240 241
    242 243 244 246 247 248 249 250 251 252 253 254 255 256 257 258
    259 260 261, on right: 105 108 118 120 124 126 158 159 174 175
    220 222 224 225 228 230 232 233 234 235 236 237 238 239 240 241
    242 243 244 246 247 248 249 250 251 252 254 255 256 260 281 292
    297 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318
    319 320 321 325 326 329 330 331 332 338 339 340 341 345 353 354
    362 379 380 381
@31 (199)
    on left: 223, on right: 224
@32 (200)
    on left: 226, on right: 228
@33 (201)
    on left: 227, on right: 228
@34 (202)
    on left: 229, on right: 230
@35 (203)
    on left: 231, on right: 232
@36 (204)
    on left: 245, on right: 246
lvalue_reference (205)
    on left: 262 263 264, on right: 259 260
pre_inc_dec (206)
    on left: 265 266, on right: 253
expr4 (207)
    on left: 267 268 269 270 271 272 273 274 275 276 277 278 279 281
    282 283 284 286 287 288 289 290 291 292, on right: 261 289 290
    291 292 296 297 298 299 358
$@37 (208)
    on left: 280, on right: 281
@38 (209)
    on left: 285, on right: 286
name_lvalue (210)
    on left: 293 294, on right: 262 295 301
lvalue (211)
    on left: 295 296 297 298 299 300, on right: 224 253 257 258 263
    383
name_var_lvalue (212)
    on left: 301, on right: 171
local_name_lvalue (213)
    on left: 302 303, on right: 159 160 170
index_expr (214)
    on left: 304 305 306, on right: 290 296
index_range (215)
    on left: 307 308 309 310 311 312 313 314 315 316 317 318 319 320
    321, on right: 291 298
expr_list (216)
    on left: 322 323 324, on right: 278 279
expr_list2 (217)
    on left: 325 326, on right: 323 324 326 336 337
arg_expr_list (218)
    on left: 327 328, on right: 356 358
arg_expr_list2 (219)
    on left: 329 330 331 332, on right: 328 331 332
m_expr_list (220)
    on left: 333 334 335 336 337, on right: 282
m_expr_list2 (221)
    on left: 338 339, on right: 334 335 339
m_expr_values (222)
    on left: 340 341, on right: 338 339 341
struct_member_name (223)
    on left: 342 343 344 345, on right: 289 299
opt_struct_init (224)
    on left: 346 347 348, on right: 286
possible_comma (225)
    on left: 349 350, on right: 347
opt_struct_init2 (226)
    on left: 351 352, on right: 347 348 352
struct_init (227)
    on left: 353 354, on right: 351 352
function_call (228)
    on left: 356 358, on right: 264 267
@39 (229)
    on left: 355, on right: 356
@40 (230)
    on left: 357, on right: 358
call_other_name (231)
    on left: 359 360 361 362, on right: 358
function_name (232)
    on left: 363 364 365 366 367 368, on right: 356
anchestor (233)
    on left: 369 370 371, on right: 367 368
catch (234)
    on left: 373, on right: 269
@41 (235)
    on left: 372, on right: 373
opt_catch_mods (236)
    on left: 374 375, on right: 373
opt_catch_mod_list (237)
    on left: 376 377, on right: 374 376
opt_catch_modifier (238)
    on left: 378 379, on right: 376 377
sscanf (239)
    on left: 380, on right: 270
parse_command (240)
    on left: 381, on right: 271
lvalue_list (241)
    on left: 382 383, on right: 380 381 383


State 0

    0 $accept: . all $end

    $default  reduce using rule 3 (program)

    all      go to state 1
    program  go to state 2


State 1

    0 $accept: all . $end

    $end  shift, and go to state 3


State 2

    1 all: program .
    2 program: program . def possible_semi_colon

    L_DEFAULT  shift, and go to state 4

    $end      reduce using rule 1 (all)
    $default  reduce using rule 61 (type_modifier_list)

    def                        go to state 5
    struct_decl                go to state 6
    inheritance                go to state 7
    inheritance_qualifiers     go to state 8
    inheritance_modifier_list  go to state 9
    inheritance_qualifier      go to state 10
    default_visibility         go to state 11
    type                       go to state 12
    type_modifier_list         go to state 13
    name_list                  go to state 14


State 3

    0 $accept: all $end .

    $default  accept


State 4

   56 default_visibility: L_DEFAULT . inheritance_qualifiers ';'

    $default  reduce using rule 61 (type_modifier_list)

    inheritance_qualifiers     go to state 15
    inheritance_modifier_list  go to state 9
    inheritance_qualifier      go to state 10
    type                       go to state 16
    type_modifier_list         go to state 17


State 5

    2 program: program def . possible_semi_colon

    ';'  shift, and go to state 18

    $default  reduce using rule 4 (possible_semi_colon)

    possible_semi_colon  go to state 19


State 6

   11 def: struct_decl .

    $default  reduce using rule 11 (def)


State 7

   12 def: inheritance .

    $default  reduce using rule 12 (def)


State 8

   49 inheritance: inheritance_qualifiers . L_INHERIT string_constant ';'

    L_INHERIT  shift, and go to state 20


State 9

   50 inheritance_qualifiers: inheritance_modifier_list .
   54 inheritance_modifier_list: inheritance_modifier_list . inheritance_modifier type_modifier_list

    L_VIRTUAL  shift, and go to state 21

    $default  reduce using rule 50 (inheritance_qualifiers)

    inheritance_modifier  go to state 22


State 10

   51 inheritance_qualifiers: inheritance_qualifier . inheritance_qualifiers

    $default  reduce using rule 61 (type_modifier_list)

    inheritance_qualifiers     go to state 23
    inheritance_modifier_list  go to state 9
    inheritance_qualifier      go to state 10
    type                       go to state 16
    type_modifier_list         go to state 17


State 11

   13 def: default_visibility .

    $default  reduce using rule 13 (def)


State 12

    9 def: type . L_IDENTIFIER $@1 '(' argument ')' $@2 function_body
   55 inheritance_qualifier: type . L_IDENTIFIER
  103 name_list: type . L_IDENTIFIER
  105          | type . L_IDENTIFIER @9 L_ASSIGN expr0

    L_IDENTIFIER  shift, and go to state 24


State 13

   37 struct_decl: type_modifier_list . L_STRUCT L_IDENTIFIER ';'
   39            | type_modifier_list . L_STRUCT L_IDENTIFIER $@8 opt_base_struct '{' opt_member_list '}' ';'
   53 inheritance_modifier_list: type_modifier_list .
   59 type: type_modifier_list . opt_basic_type
   62 type_modifier_list: type_modifier_list . type_modifier

    L_CLOSURE_DECL  shift, and go to state 25
    L_FLOAT_DECL    shift, and go to state 26
    L_INT           shift, and go to state 27
    L_MAPPING       shift, and go to state 28
    L_MIXED         shift, and go to state 29
    L_NO_MASK       shift, and go to state 30
    L_NOSAVE        shift, and go to state 31
    L_DEPRECATED    shift, and go to state 32
    L_OBJECT        shift, and go to state 33
    L_PRIVATE       shift, and go to state 34
    L_PROTECTED     shift, and go to state 35
    L_PUBLIC        shift, and go to state 36
    L_STATIC        shift, and go to state 37
    L_STATUS        shift, and go to state 38
    L_STRING_DECL   shift, and go to state 39
    L_STRUCT        shift, and go to state 40
    L_SYMBOL_DECL   shift, and go to state 41
    L_VARARGS       shift, and go to state 42
    L_VISIBLE       shift, and go to state 43
    L_VOID          shift, and go to state 44
    '<'             shift, and go to state 45

    L_IDENTIFIER  reduce using rule 73 (opt_basic_type)
    $default      reduce using rule 53 (inheritance_modifier_list)

    type_modifier               go to state 46
    opt_basic_type              go to state 47
    basic_non_void_type         go to state 48
    single_basic_non_void_type  go to state 49
    basic_type                  go to state 50


State 14

   10 def: name_list . ';'
  106 name_list: name_list . ',' optional_stars L_IDENTIFIER
  108          | name_list . ',' optional_stars L_IDENTIFIER @10 L_ASSIGN expr0

    ';'  shift, and go to state 51
    ','  shift, and go to state 52


State 15

   56 default_visibility: L_DEFAULT inheritance_qualifiers . ';'

    ';'  shift, and go to state 53


State 16

   55 inheritance_qualifier: type . L_IDENTIFIER

    L_IDENTIFIER  shift, and go to state 54


State 17

   53 inheritance_modifier_list: type_modifier_list .
   59 type: type_modifier_list . opt_basic_type
   62 type_modifier_list: type_modifier_list . type_modifier

    L_CLOSURE_DECL  shift, and go to state 25
    L_FLOAT_DECL    shift, and go to state 26
    L_INT           shift, and go to state 27
    L_MAPPING       shift, and go to state 28
    L_MIXED         shift, and go to state 29
    L_NO_MASK       shift, and go to state 30
    L_NOSAVE        shift, and go to state 31
    L_DEPRECATED    shift, and go to state 32
    L_OBJECT        shift, and go to state 33
    L_PRIVATE       shift, and go to state 34
    L_PROTECTED     shift, and go to state 35
    L_PUBLIC        shift, and go to state 36
    L_STATIC        shift, and go to state 37
    L_STATUS        shift, and go to state 38
    L_STRING_DECL   shift, and go to state 39
    L_STRUCT        shift, and go to state 55
    L_SYMBOL_DECL   shift, and go to state 41
    L_VARARGS       shift, and go to state 42
    L_VISIBLE       shift, and go to state 43
    L_VOID          shift, and go to state 44
    '<'             shift, and go to state 45

    L_IDENTIFIER  reduce using rule 73 (opt_basic_type)
    $default      reduce using rule 53 (inheritance_modifier_list)

    type_modifier               go to state 46
    opt_basic_type              go to state 47
    basic_non_void_type         go to state 48
    single_basic_non_void_type  go to state 49
    basic_type                  go to state 50


State 18

    5 possible_semi_colon: ';' .

    $default  reduce using rule 5 (possible_semi_colon)


State 19

    2 program: program def possible_semi_colon .

    $default  reduce using rule 2 (program)


State 20

   49 inheritance: inheritance_qualifiers L_INHERIT . string_constant ';'

    L_STRING  shift, and go to state 56
    '('       shift, and go to state 57

    string_constant  go to state 58


State 21

   52 inheritance_modifier: L_VIRTUAL .

    $default  reduce using rule 52 (inheritance_modifier)


State 22

   54 inheritance_modifier_list: inheritance_modifier_list inheritance_modifier . type_modifier_list

    $default  reduce using rule 61 (type_modifier_list)

    type_modifier_list  go to state 59


State 23

   51 inheritance_qualifiers: inheritance_qualifier inheritance_qualifiers .

    $default  reduce using rule 51 (inheritance_qualifiers)


State 24

    9 def: type L_IDENTIFIER . $@1 '(' argument ')' $@2 function_body
   55 inheritance_qualifier: type L_IDENTIFIER .
  103 name_list: type L_IDENTIFIER .
  105          | type L_IDENTIFIER . @9 L_ASSIGN expr0

    L_ASSIGN  reduce using rule 104 (@9)
    ';'       reduce using rule 103 (name_list)
    '('       reduce using rule 7 ($@1)
    ','       reduce using rule 103 (name_list)
    $default  reduce using rule 55 (inheritance_qualifier)

    $@1  go to state 60
    @9   go to state 61


State 25

   82 single_basic_non_void_type: L_CLOSURE_DECL .

    $default  reduce using rule 82 (single_basic_non_void_type)


State 26

   84 single_basic_non_void_type: L_FLOAT_DECL .

    $default  reduce using rule 84 (single_basic_non_void_type)


State 27

   79 single_basic_non_void_type: L_INT .

    $default  reduce using rule 79 (single_basic_non_void_type)


State 28

   85 single_basic_non_void_type: L_MAPPING .

    $default  reduce using rule 85 (single_basic_non_void_type)


State 29

   86 single_basic_non_void_type: L_MIXED .

    $default  reduce using rule 86 (single_basic_non_void_type)


State 30

   63 type_modifier: L_NO_MASK .

    $default  reduce using rule 63 (type_modifier)


State 31

   69 type_modifier: L_NOSAVE .

    $default  reduce using rule 69 (type_modifier)


State 32

   70 type_modifier: L_DEPRECATED .

    $default  reduce using rule 70 (type_modifier)


State 33

   81 single_basic_non_void_type: L_OBJECT .

    $default  reduce using rule 81 (single_basic_non_void_type)


State 34

   65 type_modifier: L_PRIVATE .

    $default  reduce using rule 65 (type_modifier)


State 35

   68 type_modifier: L_PROTECTED .

    $default  reduce using rule 68 (type_modifier)


State 36

   66 type_modifier: L_PUBLIC .

    $default  reduce using rule 66 (type_modifier)


State 37

   64 type_modifier: L_STATIC .

    $default  reduce using rule 64 (type_modifier)


State 38

   78 single_basic_non_void_type: L_STATUS .

    $default  reduce using rule 78 (single_basic_non_void_type)


State 39

   80 single_basic_non_void_type: L_STRING_DECL .

    $default  reduce using rule 80 (single_basic_non_void_type)


State 40

   37 struct_decl: type_modifier_list L_STRUCT . L_IDENTIFIER ';'
   39            | type_modifier_list L_STRUCT . L_IDENTIFIER $@8 opt_base_struct '{' opt_member_list '}' ';'
   87 single_basic_non_void_type: L_STRUCT . identifier

    L_IDENTIFIER  shift, and go to state 62
    L_LOCAL       shift, and go to state 63

    identifier  go to state 64


State 41

   83 single_basic_non_void_type: L_SYMBOL_DECL .

    $default  reduce using rule 83 (single_basic_non_void_type)


State 42

   67 type_modifier: L_VARARGS .

    $default  reduce using rule 67 (type_modifier)


State 43

   71 type_modifier: L_VISIBLE .

    $default  reduce using rule 71 (type_modifier)


State 44

   91 basic_type: L_VOID .

    $default  reduce using rule 91 (basic_type)


State 45

   89 single_basic_non_void_type: '<' . basic_non_void_type '>'

    L_CLOSURE_DECL  shift, and go to state 25
    L_FLOAT_DECL    shift, and go to state 26
    L_INT           shift, and go to state 27
    L_MAPPING       shift, and go to state 28
    L_MIXED         shift, and go to state 29
    L_OBJECT        shift, and go to state 33
    L_STATUS        shift, and go to state 38
    L_STRING_DECL   shift, and go to state 39
    L_STRUCT        shift, and go to state 55
    L_SYMBOL_DECL   shift, and go to state 41
    '<'             shift, and go to state 45

    basic_non_void_type         go to state 65
    single_basic_non_void_type  go to state 49


State 46

   62 type_modifier_list: type_modifier_list type_modifier .

    $default  reduce using rule 62 (type_modifier_list)


State 47

   59 type: type_modifier_list opt_basic_type .

    $default  reduce using rule 59 (type)


State 48

   77 basic_non_void_type: basic_non_void_type . '|' single_basic_non_void_type
   90 basic_type: basic_non_void_type .

    '|'  shift, and go to state 66

    $default  reduce using rule 90 (basic_type)


State 49

   76 basic_non_void_type: single_basic_non_void_type .
   88 single_basic_non_void_type: single_basic_non_void_type . '*'

    '*'  shift, and go to state 67

    $default  reduce using rule 76 (basic_non_void_type)


State 50

   72 opt_basic_type: basic_type .

    $default  reduce using rule 72 (opt_basic_type)


State 51

   10 def: name_list ';' .

    $default  reduce using rule 10 (def)


State 52

  106 name_list: name_list ',' . optional_stars L_IDENTIFIER
  108          | name_list ',' . optional_stars L_IDENTIFIER @10 L_ASSIGN expr0

    $default  reduce using rule 57 (optional_stars)

    optional_stars  go to state 68


State 53

   56 default_visibility: L_DEFAULT inheritance_qualifiers ';' .

    $default  reduce using rule 56 (default_visibility)


State 54

   55 inheritance_qualifier: type L_IDENTIFIER .

    $default  reduce using rule 55 (inheritance_qualifier)


State 55

   87 single_basic_non_void_type: L_STRUCT . identifier

    L_IDENTIFIER  shift, and go to state 69
    L_LOCAL       shift, and go to state 63

    identifier  go to state 64


State 56

  215 string_constant: L_STRING .
  217                | L_STRING . L_STRING

    L_STRING  shift, and go to state 70

    $default  reduce using rule 215 (string_constant)


State 57

  219 string_constant: '(' . string_constant ')'

    L_STRING  shift, and go to state 56
    '('       shift, and go to state 57

    string_constant  go to state 71


State 58

   49 inheritance: inheritance_qualifiers L_INHERIT string_constant . ';'
  216 string_constant: string_constant . '+' L_STRING
  218                | string_constant . '+' L_STRING L_STRING

    '+'  shift, and go to state 72
    ';'  shift, and go to state 73


State 59

   54 inheritance_modifier_list: inheritance_modifier_list inheritance_modifier type_modifier_list .
   62 type_modifier_list: type_modifier_list . type_modifier

    L_NO_MASK     shift, and go to state 30
    L_NOSAVE      shift, and go to state 31
    L_DEPRECATED  shift, and go to state 32
    L_PRIVATE     shift, and go to state 34
    L_PROTECTED   shift, and go to state 35
    L_PUBLIC      shift, and go to state 36
    L_STATIC      shift, and go to state 37
    L_VARARGS     shift, and go to state 42
    L_VISIBLE     shift, and go to state 43

    $default  reduce using rule 54 (inheritance_modifier_list)

    type_modifier  go to state 46


State 60

    9 def: type L_IDENTIFIER $@1 . '(' argument ')' $@2 function_body

    '('  shift, and go to state 74


State 61

  105 name_list: type L_IDENTIFIER @9 . L_ASSIGN expr0

    L_ASSIGN  shift, and go to state 75


State 62

   37 struct_decl: type_modifier_list L_STRUCT L_IDENTIFIER . ';'
   39            | type_modifier_list L_STRUCT L_IDENTIFIER . $@8 opt_base_struct '{' opt_member_list '}' ';'
   94 identifier: L_IDENTIFIER .

    ';'  shift, and go to state 76

    '('       reduce using rule 38 ($@8)
    '{'       reduce using rule 38 ($@8)
    $default  reduce using rule 94 (identifier)

    $@8  go to state 77


State 63

   95 identifier: L_LOCAL .

    $default  reduce using rule 95 (identifier)


State 64

   87 single_basic_non_void_type: L_STRUCT identifier .

    $default  reduce using rule 87 (single_basic_non_void_type)


State 65

   77 basic_non_void_type: basic_non_void_type . '|' single_basic_non_void_type
   89 single_basic_non_void_type: '<' basic_non_void_type . '>'

    '|'  shift, and go to state 66
    '>'  shift, and go to state 78


State 66

   77 basic_non_void_type: basic_non_void_type '|' . single_basic_non_void_type

    L_CLOSURE_DECL  shift, and go to state 25
    L_FLOAT_DECL    shift, and go to state 26
    L_INT           shift, and go to state 27
    L_MAPPING       shift, and go to state 28
    L_MIXED         shift, and go to state 29
    L_OBJECT        shift, and go to state 33
    L_STATUS        shift, and go to state 38
    L_STRING_DECL   shift, and go to state 39
    L_STRUCT        shift, and go to state 55
    L_SYMBOL_DECL   shift, and go to state 41
    '<'             shift, and go to state 45

    single_basic_non_void_type  go to state 79


State 67

   88 single_basic_non_void_type: single_basic_non_void_type '*' .

    $default  reduce using rule 88 (single_basic_non_void_type)


State 68

   58 optional_stars: optional_stars . '*'
  106 name_list: name_list ',' optional_stars . L_IDENTIFIER
  108          | name_list ',' optional_stars . L_IDENTIFIER @10 L_ASSIGN expr0

    L_IDENTIFIER  shift, and go to state 80
    '*'           shift, and go to state 81


State 69

   94 identifier: L_IDENTIFIER .

    $default  reduce using rule 94 (identifier)


State 70

  217 string_constant: L_STRING L_STRING .

    $default  reduce using rule 217 (string_constant)


State 71

  216 string_constant: string_constant . '+' L_STRING
  218                | string_constant . '+' L_STRING L_STRING
  219                | '(' string_constant . ')'

    '+'  shift, and go to state 72
    ')'  shift, and go to state 82


State 72

  216 string_constant: string_constant '+' . L_STRING
  218                | string_constant '+' . L_STRING L_STRING

    L_STRING  shift, and go to state 83


State 73

   49 inheritance: inheritance_qualifiers L_INHERIT string_constant ';' .

    $default  reduce using rule 49 (inheritance)


State 74

    9 def: type L_IDENTIFIER $@1 '(' . argument ')' $@2 function_body

    L_VOID  shift, and go to state 84

    ')'       reduce using rule 96 (argument)
    $default  reduce using rule 61 (type_modifier_list)

    non_void_type       go to state 85
    type_modifier_list  go to state 86
    argument            go to state 87
    argument_list       go to state 88
    new_arg_name        go to state 89


State 75

  105 name_list: type L_IDENTIFIER @9 L_ASSIGN . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 116
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 76

   37 struct_decl: type_modifier_list L_STRUCT L_IDENTIFIER ';' .

    $default  reduce using rule 37 (struct_decl)


State 77

   39 struct_decl: type_modifier_list L_STRUCT L_IDENTIFIER $@8 . opt_base_struct '{' opt_member_list '}' ';'

    '('  shift, and go to state 128

    $default  reduce using rule 40 (opt_base_struct)

    opt_base_struct  go to state 129


State 78

   89 single_basic_non_void_type: '<' basic_non_void_type '>' .

    $default  reduce using rule 89 (single_basic_non_void_type)


State 79

   77 basic_non_void_type: basic_non_void_type '|' single_basic_non_void_type .
   88 single_basic_non_void_type: single_basic_non_void_type . '*'

    '*'  shift, and go to state 67

    $default  reduce using rule 77 (basic_non_void_type)


State 80

  106 name_list: name_list ',' optional_stars L_IDENTIFIER .
  108          | name_list ',' optional_stars L_IDENTIFIER . @10 L_ASSIGN expr0

    L_ASSIGN  reduce using rule 107 (@10)
    $default  reduce using rule 106 (name_list)

    @10  go to state 130


State 81

   58 optional_stars: optional_stars '*' .

    $default  reduce using rule 58 (optional_stars)


State 82

  219 string_constant: '(' string_constant ')' .

    $default  reduce using rule 219 (string_constant)


State 83

  216 string_constant: string_constant '+' L_STRING .
  218                | string_constant '+' L_STRING . L_STRING

    L_STRING  shift, and go to state 131

    $default  reduce using rule 216 (string_constant)


State 84

   97 argument: L_VOID .

    $default  reduce using rule 97 (argument)


State 85

  101 new_arg_name: non_void_type . L_IDENTIFIER
  102             | non_void_type . L_LOCAL

    L_IDENTIFIER  shift, and go to state 132
    L_LOCAL       shift, and go to state 133


State 86

   60 non_void_type: type_modifier_list . opt_basic_non_void_type
   62 type_modifier_list: type_modifier_list . type_modifier

    L_CLOSURE_DECL  shift, and go to state 25
    L_FLOAT_DECL    shift, and go to state 26
    L_INT           shift, and go to state 27
    L_MAPPING       shift, and go to state 28
    L_MIXED         shift, and go to state 29
    L_NO_MASK       shift, and go to state 30
    L_NOSAVE        shift, and go to state 31
    L_DEPRECATED    shift, and go to state 32
    L_OBJECT        shift, and go to state 33
    L_PRIVATE       shift, and go to state 34
    L_PROTECTED     shift, and go to state 35
    L_PUBLIC        shift, and go to state 36
    L_STATIC        shift, and go to state 37
    L_STATUS        shift, and go to state 38
    L_STRING_DECL   shift, and go to state 39
    L_STRUCT        shift, and go to state 55
    L_SYMBOL_DECL   shift, and go to state 41
    L_VARARGS       shift, and go to state 42
    L_VISIBLE       shift, and go to state 43
    '<'             shift, and go to state 45

    $default  reduce using rule 75 (opt_basic_non_void_type)

    type_modifier               go to state 46
    opt_basic_non_void_type     go to state 134
    basic_non_void_type         go to state 135
    single_basic_non_void_type  go to state 49


State 87

    9 def: type L_IDENTIFIER $@1 '(' argument . ')' $@2 function_body

    ')'  shift, and go to state 136


State 88

   98 argument: argument_list .
  100 argument_list: argument_list . ',' new_arg_name

    ','  shift, and go to state 137

    $default  reduce using rule 98 (argument)


State 89

   99 argument_list: new_arg_name .

    $default  reduce using rule 99 (argument_list)


State 90

  225 expr0: error . L_ASSIGN expr0

    L_ASSIGN  shift, and go to state 138


State 91

  373 catch: L_CATCH . @41 '(' comma_expr note_start opt_catch_mods ')'

    $default  reduce using rule 372 (@41)

    @41  go to state 139


State 92

  274 expr4: L_CLOSURE .

    $default  reduce using rule 274 (expr4)


State 93

  365 function_name: L_COLON_COLON . L_IDENTIFIER
  366              | L_COLON_COLON . L_LOCAL

    L_IDENTIFIER  shift, and go to state 140
    L_LOCAL       shift, and go to state 141


State 94

  266 pre_inc_dec: L_DEC .

    $default  reduce using rule 266 (pre_inc_dec)


State 95

  300 lvalue: L_DUMMY .

    $default  reduce using rule 300 (lvalue)


State 96

   20 inline_func: L_FUNC . inline_opt_type $@4 inline_opt_args $@5 inline_opt_context $@6 block

    L_CLOSURE_DECL  shift, and go to state 25
    L_FLOAT_DECL    shift, and go to state 26
    L_INT           shift, and go to state 27
    L_MAPPING       shift, and go to state 28
    L_MIXED         shift, and go to state 29
    L_OBJECT        shift, and go to state 33
    L_STATUS        shift, and go to state 38
    L_STRING_DECL   shift, and go to state 39
    L_STRUCT        shift, and go to state 55
    L_SYMBOL_DECL   shift, and go to state 41
    L_VOID          shift, and go to state 44
    '<'             shift, and go to state 45

    $default  reduce using rule 25 (inline_opt_type)

    inline_opt_type             go to state 142
    basic_non_void_type         go to state 48
    single_basic_non_void_type  go to state 49
    basic_type                  go to state 143


State 97

   22 inline_func: L_BEGIN_INLINE . $@7 statements inline_comma_expr L_END_INLINE

    $default  reduce using rule 21 ($@7)

    $@7  go to state 144


State 98

  276 expr4: L_FLOAT .

    $default  reduce using rule 276 (expr4)


State 99

  287 expr4: L_IDENTIFIER .
  293 name_lvalue: L_IDENTIFIER .
  363 function_name: L_IDENTIFIER .
  369 anchestor: L_IDENTIFIER .

    L_ASSIGN       reduce using rule 293 (name_lvalue)
    L_COLON_COLON  reduce using rule 369 (anchestor)
    L_DEC          reduce using rule 293 (name_lvalue)
    L_INC          reduce using rule 293 (name_lvalue)
    '('            reduce using rule 363 (function_name)
    ')'            reduce using rule 293 (name_lvalue)
    $default       reduce using rule 287 (expr4)


State 100

  265 pre_inc_dec: L_INC .

    $default  reduce using rule 265 (pre_inc_dec)


State 101

  288 expr4: L_LOCAL .
  294 name_lvalue: L_LOCAL .
  364 function_name: L_LOCAL .

    L_ASSIGN  reduce using rule 294 (name_lvalue)
    L_DEC     reduce using rule 294 (name_lvalue)
    L_INC     reduce using rule 294 (name_lvalue)
    '('       reduce using rule 364 (function_name)
    ')'       reduce using rule 294 (name_lvalue)
    $default  reduce using rule 288 (expr4)


State 102

  254 expr0: L_NOT . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 145
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 103

  273 expr4: L_NUMBER .

    $default  reduce using rule 273 (expr4)


State 104

  381 parse_command: L_PARSE_COMMAND . note_start '(' expr0 ',' expr0 ',' expr0 lvalue_list ')'

    $default  reduce using rule 6 (note_start)

    note_start  go to state 146


State 105

  279 expr4: L_QUOTED_AGGREGATE . note_start expr_list '}' ')'

    $default  reduce using rule 6 (note_start)

    note_start  go to state 147


State 106

  380 sscanf: L_SSCANF . note_start '(' expr0 ',' expr0 lvalue_list ')'

    $default  reduce using rule 6 (note_start)

    note_start  go to state 148


State 107

  272 expr4: L_STRING .
  370 anchestor: L_STRING . L_STRING
  371          | L_STRING .

    L_STRING  shift, and go to state 149

    L_COLON_COLON  reduce using rule 371 (anchestor)
    $default       reduce using rule 272 (expr4)


State 108

  275 expr4: L_SYMBOL .

    $default  reduce using rule 275 (expr4)


State 109

  262 lvalue_reference: '&' . name_lvalue
  263                 | '&' . '(' lvalue ')'
  264                 | '&' . '(' function_call ')'

    L_IDENTIFIER  shift, and go to state 150
    L_LOCAL       shift, and go to state 151
    '('           shift, and go to state 152

    name_lvalue  go to state 153


State 110

  256 expr0: '-' . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 154
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 111

  255 expr0: '~' . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 155
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 112

   92 cast: '(' . single_basic_non_void_type ')'
   93 decl_cast: '(' . '{' basic_type '}' ')'
  277 expr4: '(' . note_start comma_expr ')'
  278      | '(' . '{' note_start expr_list '}' ')'
  281      | '(' . '[' ':' note_start $@37 expr0 ']' ')'
  282      | '(' . '[' note_start m_expr_list ']' ')'
  283      | '(' . '<' note_start '>' ')'
  284      | '(' . '<' note_start error ')'
  286      | '(' . '<' identifier '>' @38 note_start opt_struct_init ')'

    L_CLOSURE_DECL  shift, and go to state 25
    L_FLOAT_DECL    shift, and go to state 26
    L_INT           shift, and go to state 27
    L_MAPPING       shift, and go to state 28
    L_MIXED         shift, and go to state 29
    L_OBJECT        shift, and go to state 33
    L_STATUS        shift, and go to state 38
    L_STRING_DECL   shift, and go to state 39
    L_STRUCT        shift, and go to state 55
    L_SYMBOL_DECL   shift, and go to state 41
    '<'             shift, and go to state 156
    '['             shift, and go to state 157
    '{'             shift, and go to state 158

    $default  reduce using rule 6 (note_start)

    note_start                  go to state 159
    single_basic_non_void_type  go to state 160


State 113

  268 expr4: inline_func .

    $default  reduce using rule 268 (expr4)


State 114

  252 expr0: cast . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 161
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 115

  251 expr0: decl_cast . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 162
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 116

  105 name_list: type L_IDENTIFIER @9 L_ASSIGN expr0 .
  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 105 (name_list)


State 117

  259 expr0: lvalue_reference .
  260      | lvalue_reference . L_ASSIGN expr0

    L_ASSIGN  shift, and go to state 183

    $default  reduce using rule 259 (expr0)


State 118

  253 expr0: pre_inc_dec . lvalue

    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 634
    L_LOCAL             shift, and go to state 635
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '('                 shift, and go to state 184

    inline_func    go to state 113
    expr4          go to state 185
    name_lvalue    go to state 120
    lvalue         go to state 186
    function_call  go to state 122
    function_name  go to state 123
    anchestor      go to state 124
    catch          go to state 125
    sscanf         go to state 126
    parse_command  go to state 127


State 119

  261 expr0: expr4 .
  289 expr4: expr4 . L_ARROW struct_member_name
  290      | expr4 . index_expr
  291      | expr4 . index_range
  292      | expr4 . '[' expr0 ',' expr0 ']'
  296 lvalue: expr4 . index_expr
  297       | expr4 . '[' expr0 ',' expr0 ']'
  298       | expr4 . index_range
  299       | expr4 . L_ARROW struct_member_name
  358 function_call: expr4 . L_ARROW call_other_name @40 '(' arg_expr_list ')'

    L_ARROW  shift, and go to state 187
    '['      shift, and go to state 188

    $default  reduce using rule 261 (expr0)

    index_expr   go to state 189
    index_range  go to state 190


State 120

  295 lvalue: name_lvalue .

    $default  reduce using rule 295 (lvalue)


State 121

  224 expr0: lvalue . L_ASSIGN @31 expr0
  257      | lvalue . L_INC
  258      | lvalue . L_DEC

    L_ASSIGN  shift, and go to state 191
    L_DEC     shift, and go to state 192
    L_INC     shift, and go to state 193


State 122

  267 expr4: function_call .

    $default  reduce using rule 267 (expr4)


State 123

  356 function_call: function_name . @39 '(' arg_expr_list ')'

    $default  reduce using rule 355 (@39)

    @39  go to state 194


State 124

  367 function_name: anchestor . L_COLON_COLON L_IDENTIFIER
  368              | anchestor . L_COLON_COLON L_LOCAL

    L_COLON_COLON  shift, and go to state 195


State 125

  269 expr4: catch .

    $default  reduce using rule 269 (expr4)


State 126

  270 expr4: sscanf .

    $default  reduce using rule 270 (expr4)


State 127

  271 expr4: parse_command .

    $default  reduce using rule 271 (expr4)


State 128

   41 opt_base_struct: '(' . L_IDENTIFIER ')'

    L_IDENTIFIER  shift, and go to state 196


State 129

   39 struct_decl: type_modifier_list L_STRUCT L_IDENTIFIER $@8 opt_base_struct . '{' opt_member_list '}' ';'

    '{'  shift, and go to state 197


State 130

  108 name_list: name_list ',' optional_stars L_IDENTIFIER @10 . L_ASSIGN expr0

    L_ASSIGN  shift, and go to state 198


State 131

  218 string_constant: string_constant '+' L_STRING L_STRING .

    $default  reduce using rule 218 (string_constant)


State 132

  101 new_arg_name: non_void_type L_IDENTIFIER .

    $default  reduce using rule 101 (new_arg_name)


State 133

  102 new_arg_name: non_void_type L_LOCAL .

    $default  reduce using rule 102 (new_arg_name)


State 134

   60 non_void_type: type_modifier_list opt_basic_non_void_type .

    $default  reduce using rule 60 (non_void_type)


State 135

   74 opt_basic_non_void_type: basic_non_void_type .
   77 basic_non_void_type: basic_non_void_type . '|' single_basic_non_void_type

    '|'  shift, and go to state 66

    $default  reduce using rule 74 (opt_basic_non_void_type)


State 136

    9 def: type L_IDENTIFIER $@1 '(' argument ')' . $@2 function_body

    $default  reduce using rule 8 ($@2)

    $@2  go to state 199


State 137

  100 argument_list: argument_list ',' . new_arg_name

    $default  reduce using rule 61 (type_modifier_list)

    non_void_type       go to state 85
    type_modifier_list  go to state 86
    new_arg_name        go to state 200


State 138

  225 expr0: error L_ASSIGN . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 201
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 139

  373 catch: L_CATCH @41 . '(' comma_expr note_start opt_catch_mods ')'

    '('  shift, and go to state 202


State 140

  365 function_name: L_COLON_COLON L_IDENTIFIER .

    $default  reduce using rule 365 (function_name)


State 141

  366 function_name: L_COLON_COLON L_LOCAL .

    $default  reduce using rule 366 (function_name)


State 142

   20 inline_func: L_FUNC inline_opt_type . $@4 inline_opt_args $@5 inline_opt_context $@6 block

    $default  reduce using rule 17 ($@4)

    $@4  go to state 203


State 143

   26 inline_opt_type: basic_type .

    $default  reduce using rule 26 (inline_opt_type)


State 144

   22 inline_func: L_BEGIN_INLINE $@7 . statements inline_comma_expr L_END_INLINE

    $default  reduce using rule 112 (statements)

    statements  go to state 204


State 145

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  254      | L_NOT expr0 .

    $default  reduce using rule 254 (expr0)


State 146

  381 parse_command: L_PARSE_COMMAND note_start . '(' expr0 ',' expr0 ',' expr0 lvalue_list ')'

    '('  shift, and go to state 205


State 147

  279 expr4: L_QUOTED_AGGREGATE note_start . expr_list '}' ')'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    '}'  reduce using rule 322 (expr_list)

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 206
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    expr_list         go to state 207
    expr_list2        go to state 208
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 148

  380 sscanf: L_SSCANF note_start . '(' expr0 ',' expr0 lvalue_list ')'

    '('  shift, and go to state 209


State 149

  370 anchestor: L_STRING L_STRING .

    $default  reduce using rule 370 (anchestor)


State 150

  293 name_lvalue: L_IDENTIFIER .

    $default  reduce using rule 293 (name_lvalue)


State 151

  294 name_lvalue: L_LOCAL .

    $default  reduce using rule 294 (name_lvalue)


State 152

  263 lvalue_reference: '&' '(' . lvalue ')'
  264                 | '&' '(' . function_call ')'

    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_LOCAL             shift, and go to state 101
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '('                 shift, and go to state 184

    inline_func    go to state 113
    expr4          go to state 185
    name_lvalue    go to state 120
    lvalue         go to state 210
    function_call  go to state 211
    function_name  go to state 123
    anchestor      go to state 124
    catch          go to state 125
    sscanf         go to state 126
    parse_command  go to state 127


State 153

  262 lvalue_reference: '&' name_lvalue .

    $default  reduce using rule 262 (lvalue_reference)


State 154

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  256      | '-' expr0 .

    $default  reduce using rule 256 (expr0)


State 155

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  255      | '~' expr0 .

    $default  reduce using rule 255 (expr0)


State 156

   89 single_basic_non_void_type: '<' . basic_non_void_type '>'
  283 expr4: '(' '<' . note_start '>' ')'
  284      | '(' '<' . note_start error ')'
  286      | '(' '<' . identifier '>' @38 note_start opt_struct_init ')'

    L_CLOSURE_DECL  shift, and go to state 25
    L_FLOAT_DECL    shift, and go to state 26
    L_IDENTIFIER    shift, and go to state 69
    L_INT           shift, and go to state 27
    L_LOCAL         shift, and go to state 63
    L_MAPPING       shift, and go to state 28
    L_MIXED         shift, and go to state 29
    L_OBJECT        shift, and go to state 33
    L_STATUS        shift, and go to state 38
    L_STRING_DECL   shift, and go to state 39
    L_STRUCT        shift, and go to state 55
    L_SYMBOL_DECL   shift, and go to state 41
    '<'             shift, and go to state 45

    $default  reduce using rule 6 (note_start)

    note_start                  go to state 212
    basic_non_void_type         go to state 65
    single_basic_non_void_type  go to state 49
    identifier                  go to state 213


State 157

  281 expr4: '(' '[' . ':' note_start $@37 expr0 ']' ')'
  282      | '(' '[' . note_start m_expr_list ']' ')'

    ':'  shift, and go to state 214

    $default  reduce using rule 6 (note_start)

    note_start  go to state 215


State 158

   93 decl_cast: '(' '{' . basic_type '}' ')'
  278 expr4: '(' '{' . note_start expr_list '}' ')'

    L_CLOSURE_DECL  shift, and go to state 25
    L_FLOAT_DECL    shift, and go to state 26
    L_INT           shift, and go to state 27
    L_MAPPING       shift, and go to state 28
    L_MIXED         shift, and go to state 29
    L_OBJECT        shift, and go to state 33
    L_STATUS        shift, and go to state 38
    L_STRING_DECL   shift, and go to state 39
    L_STRUCT        shift, and go to state 55
    L_SYMBOL_DECL   shift, and go to state 41
    L_VOID          shift, and go to state 44
    '<'             shift, and go to state 45

    $default  reduce using rule 6 (note_start)

    note_start                  go to state 216
    basic_non_void_type         go to state 48
    single_basic_non_void_type  go to state 49
    basic_type                  go to state 217


State 159

  277 expr4: '(' note_start . comma_expr ')'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    comma_expr        go to state 218
    expr0             go to state 219
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 160

   88 single_basic_non_void_type: single_basic_non_void_type . '*'
   92 cast: '(' single_basic_non_void_type . ')'

    '*'  shift, and go to state 67
    ')'  shift, and go to state 220


State 161

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  252      | cast expr0 .

    $default  reduce using rule 252 (expr0)


State 162

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  251      | decl_cast expr0 .

    $default  reduce using rule 251 (expr0)


State 163

  236 expr0: expr0 L_EQ . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 221
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 164

  239 expr0: expr0 L_GE . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 222
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 165

  232 expr0: expr0 L_LAND . @35 expr0

    $default  reduce using rule 231 (@35)

    @35  go to state 223


State 166

  241 expr0: expr0 L_LE . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 224
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 167

  230 expr0: expr0 L_LOR . @34 expr0

    $default  reduce using rule 229 (@34)

    @34  go to state 225


State 168

  242 expr0: expr0 L_LSH . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 226
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 169

  237 expr0: expr0 L_NE . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 227
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 170

  243 expr0: expr0 L_RSH . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 228
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 171

  244 expr0: expr0 L_RSHL . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 229
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 172

  228 expr0: expr0 '?' . @32 expr0 @33 ':' expr0

    $default  reduce using rule 226 (@32)

    @32  go to state 230


State 173

  233 expr0: expr0 '|' . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 231
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 174

  234 expr0: expr0 '^' . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 232
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 175

  235 expr0: expr0 '&' . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 233
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 176

  240 expr0: expr0 '<' . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 234
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 177

  238 expr0: expr0 '>' . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 235
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 178

  246 expr0: expr0 '+' . @36 expr0

    $default  reduce using rule 245 (@36)

    @36  go to state 236


State 179

  247 expr0: expr0 '-' . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 237
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 180

  248 expr0: expr0 '*' . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 238
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 181

  250 expr0: expr0 '/' . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 239
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 182

  249 expr0: expr0 '%' . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 240
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 183

  260 expr0: lvalue_reference L_ASSIGN . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 241
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 184

  277 expr4: '(' . note_start comma_expr ')'
  278      | '(' . '{' note_start expr_list '}' ')'
  281      | '(' . '[' ':' note_start $@37 expr0 ']' ')'
  282      | '(' . '[' note_start m_expr_list ']' ')'
  283      | '(' . '<' note_start '>' ')'
  284      | '(' . '<' note_start error ')'
  286      | '(' . '<' identifier '>' @38 note_start opt_struct_init ')'

    '<'  shift, and go to state 242
    '['  shift, and go to state 157
    '{'  shift, and go to state 243

    $default  reduce using rule 6 (note_start)

    note_start  go to state 159


State 185

  289 expr4: expr4 . L_ARROW struct_member_name
  290      | expr4 . index_expr
  291      | expr4 . index_range
  292      | expr4 . '[' expr0 ',' expr0 ']'
  296 lvalue: expr4 . index_expr
  297       | expr4 . '[' expr0 ',' expr0 ']'
  298       | expr4 . index_range
  299       | expr4 . L_ARROW struct_member_name
  358 function_call: expr4 . L_ARROW call_other_name @40 '(' arg_expr_list ')'

    L_ARROW  shift, and go to state 636
    '['      shift, and go to state 637

    index_expr   go to state 638
    index_range  go to state 639


State 186

  253 expr0: pre_inc_dec lvalue .

    $default  reduce using rule 253 (expr0)


State 187

  289 expr4: expr4 L_ARROW . struct_member_name
  299 lvalue: expr4 L_ARROW . struct_member_name
  358 function_call: expr4 L_ARROW . call_other_name @40 '(' arg_expr_list ')'

    L_IDENTIFIER  shift, and go to state 69
    L_LOCAL       shift, and go to state 63
    L_STRING      shift, and go to state 244
    '('           shift, and go to state 245

    identifier          go to state 246
    struct_member_name  go to state 247
    call_other_name     go to state 248


State 188

  292 expr4: expr4 '[' . expr0 ',' expr0 ']'
  297 lvalue: expr4 '[' . expr0 ',' expr0 ']'
  304 index_expr: '[' . expr0 ']'
  305           | '[' . '<' expr0 ']'
  306           | '[' . '>' expr0 ']'
  307 index_range: '[' . L_RANGE expr0 ']'
  308            | '[' . L_RANGE '<' expr0 ']'
  309            | '[' . L_RANGE '>' expr0 ']'
  310            | '[' . expr0 L_RANGE expr0 ']'
  311            | '[' . expr0 L_RANGE '<' expr0 ']'
  312            | '[' . '<' expr0 L_RANGE expr0 ']'
  313            | '[' . '<' expr0 L_RANGE '<' expr0 ']'
  314            | '[' . expr0 L_RANGE '>' expr0 ']'
  315            | '[' . '>' expr0 L_RANGE expr0 ']'
  316            | '[' . '<' expr0 L_RANGE '>' expr0 ']'
  317            | '[' . '>' expr0 L_RANGE '<' expr0 ']'
  318            | '[' . '>' expr0 L_RANGE '>' expr0 ']'
  319            | '[' . expr0 L_RANGE ']'
  320            | '[' . '<' expr0 L_RANGE ']'
  321            | '[' . '>' expr0 L_RANGE ']'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_RANGE             shift, and go to state 249
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '<'                 shift, and go to state 250
    '>'                 shift, and go to state 251
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 252
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 189

  290 expr4: expr4 index_expr .
  296 lvalue: expr4 index_expr .

    L_ASSIGN  reduce using rule 296 (lvalue)
    L_DEC     reduce using rule 296 (lvalue)
    L_INC     reduce using rule 296 (lvalue)
    $default  reduce using rule 290 (expr4)


State 190

  291 expr4: expr4 index_range .
  298 lvalue: expr4 index_range .

    L_ASSIGN  reduce using rule 298 (lvalue)
    L_DEC     reduce using rule 298 (lvalue)
    L_INC     reduce using rule 298 (lvalue)
    $default  reduce using rule 291 (expr4)


State 191

  224 expr0: lvalue L_ASSIGN . @31 expr0

    $default  reduce using rule 223 (@31)

    @31  go to state 253


State 192

  258 expr0: lvalue L_DEC .

    $default  reduce using rule 258 (expr0)


State 193

  257 expr0: lvalue L_INC .

    $default  reduce using rule 257 (expr0)


State 194

  356 function_call: function_name @39 . '(' arg_expr_list ')'

    '('  shift, and go to state 254


State 195

  367 function_name: anchestor L_COLON_COLON . L_IDENTIFIER
  368              | anchestor L_COLON_COLON . L_LOCAL

    L_IDENTIFIER  shift, and go to state 255
    L_LOCAL       shift, and go to state 256


State 196

   41 opt_base_struct: '(' L_IDENTIFIER . ')'

    ')'  shift, and go to state 257


State 197

   39 struct_decl: type_modifier_list L_STRUCT L_IDENTIFIER $@8 opt_base_struct '{' . opt_member_list '}' ';'

    L_CLOSURE_DECL  shift, and go to state 25
    L_FLOAT_DECL    shift, and go to state 26
    L_INT           shift, and go to state 27
    L_MAPPING       shift, and go to state 28
    L_MIXED         shift, and go to state 29
    L_OBJECT        shift, and go to state 33
    L_STATUS        shift, and go to state 38
    L_STRING_DECL   shift, and go to state 39
    L_STRUCT        shift, and go to state 55
    L_SYMBOL_DECL   shift, and go to state 41
    '<'             shift, and go to state 45

    $default  reduce using rule 42 (opt_member_list)

    opt_member_list             go to state 258
    member_list                 go to state 259
    member                      go to state 260
    member_name_list            go to state 261
    basic_non_void_type         go to state 262
    single_basic_non_void_type  go to state 49


State 198

  108 name_list: name_list ',' optional_stars L_IDENTIFIER @10 L_ASSIGN . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 263
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 199

    9 def: type L_IDENTIFIER $@1 '(' argument ')' $@2 . function_body

    ';'  shift, and go to state 264

    $default  reduce using rule 14 (@3)

    function_body  go to state 265
    @3             go to state 266


State 200

  100 argument_list: argument_list ',' new_arg_name .

    $default  reduce using rule 100 (argument_list)


State 201

  225 expr0: error L_ASSIGN expr0 .
  228      | expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 225 (expr0)


State 202

  373 catch: L_CATCH @41 '(' . comma_expr note_start opt_catch_mods ')'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    comma_expr        go to state 267
    expr0             go to state 219
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 203

   20 inline_func: L_FUNC inline_opt_type $@4 . inline_opt_args $@5 inline_opt_context $@6 block

    '('  shift, and go to state 268

    $default  reduce using rule 23 (inline_opt_args)

    inline_opt_args  go to state 269


State 204

   22 inline_func: L_BEGIN_INLINE $@7 statements . inline_comma_expr L_END_INLINE
  113 statements: statements . local_name_list ';'
  114           | statements . statement

    error               shift, and go to state 270
    L_BREAK             shift, and go to state 271
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_CLOSURE_DECL      shift, and go to state 25
    L_COLON_COLON       shift, and go to state 93
    L_CONTINUE          shift, and go to state 272
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_FLOAT_DECL        shift, and go to state 26
    L_FOR               shift, and go to state 273
    L_FOREACH           shift, and go to state 274
    L_IDENTIFIER        shift, and go to state 99
    L_IF                shift, and go to state 275
    L_INC               shift, and go to state 100
    L_INT               shift, and go to state 27
    L_LOCAL             shift, and go to state 101
    L_MAPPING           shift, and go to state 28
    L_MIXED             shift, and go to state 29
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_OBJECT            shift, and go to state 33
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_RETURN            shift, and go to state 276
    L_SSCANF            shift, and go to state 106
    L_STATUS            shift, and go to state 38
    L_STRING            shift, and go to state 107
    L_STRING_DECL       shift, and go to state 39
    L_STRUCT            shift, and go to state 55
    L_SWITCH            shift, and go to state 277
    L_SYMBOL            shift, and go to state 108
    L_SYMBOL_DECL       shift, and go to state 41
    L_VOID              shift, and go to state 44
    '&'                 shift, and go to state 109
    '<'                 shift, and go to state 45
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    ';'                 shift, and go to state 278
    '('                 shift, and go to state 112
    '{'                 shift, and go to state 279

    L_DO          reduce using rule 145 (@18)
    L_END_INLINE  reduce using rule 35 (inline_comma_expr)
    L_WHILE       reduce using rule 142 (@16)

    inline_func                 go to state 113
    inline_comma_expr           go to state 280
    basic_non_void_type         go to state 48
    single_basic_non_void_type  go to state 49
    basic_type                  go to state 281
    cast                        go to state 114
    decl_cast                   go to state 115
    block                       go to state 282
    local_name_list             go to state 283
    statement                   go to state 284
    return                      go to state 285
    while                       go to state 286
    @16                         go to state 287
    do                          go to state 288
    @18                         go to state 289
    for                         go to state 290
    foreach                     go to state 291
    switch                      go to state 292
    condStart                   go to state 293
    cond                        go to state 294
    comma_expr                  go to state 295
    expr0                       go to state 219
    lvalue_reference            go to state 117
    pre_inc_dec                 go to state 118
    expr4                       go to state 119
    name_lvalue                 go to state 120
    lvalue                      go to state 121
    function_call               go to state 122
    function_name               go to state 123
    anchestor                   go to state 124
    catch                       go to state 125
    sscanf                      go to state 126
    parse_command               go to state 127


State 205

  381 parse_command: L_PARSE_COMMAND note_start '(' . expr0 ',' expr0 ',' expr0 lvalue_list ')'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 296
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 206

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  325 expr_list2: expr0 .

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 325 (expr_list2)


State 207

  279 expr4: L_QUOTED_AGGREGATE note_start expr_list . '}' ')'

    '}'  shift, and go to state 297


State 208

  323 expr_list: expr_list2 .
  324          | expr_list2 . ','
  326 expr_list2: expr_list2 . ',' expr0

    ','  shift, and go to state 298

    $default  reduce using rule 323 (expr_list)


State 209

  380 sscanf: L_SSCANF note_start '(' . expr0 ',' expr0 lvalue_list ')'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 299
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 210

  263 lvalue_reference: '&' '(' lvalue . ')'

    ')'  shift, and go to state 300


State 211

  264 lvalue_reference: '&' '(' function_call . ')'
  267 expr4: function_call .

    ')'  shift, and go to state 301

    $default  reduce using rule 267 (expr4)


State 212

  283 expr4: '(' '<' note_start . '>' ')'
  284      | '(' '<' note_start . error ')'

    error  shift, and go to state 302
    '>'    shift, and go to state 303


State 213

  286 expr4: '(' '<' identifier . '>' @38 note_start opt_struct_init ')'

    '>'  shift, and go to state 304


State 214

  281 expr4: '(' '[' ':' . note_start $@37 expr0 ']' ')'

    $default  reduce using rule 6 (note_start)

    note_start  go to state 305


State 215

  282 expr4: '(' '[' note_start . m_expr_list ']' ')'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    ']'  reduce using rule 333 (m_expr_list)

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 306
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    expr_list2        go to state 307
    m_expr_list       go to state 308
    m_expr_list2      go to state 309
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 216

  278 expr4: '(' '{' note_start . expr_list '}' ')'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    '}'  reduce using rule 322 (expr_list)

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 206
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    expr_list         go to state 310
    expr_list2        go to state 208
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 217

   93 decl_cast: '(' '{' basic_type . '}' ')'

    '}'  shift, and go to state 311


State 218

  222 comma_expr: comma_expr . $@30 ',' expr0
  277 expr4: '(' note_start comma_expr . ')'

    ')'  shift, and go to state 312

    $default  reduce using rule 221 ($@30)

    $@30  go to state 313


State 219

  220 comma_expr: expr0 .
  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 220 (comma_expr)


State 220

   92 cast: '(' single_basic_non_void_type ')' .

    $default  reduce using rule 92 (cast)


State 221

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  236      | expr0 L_EQ expr0 .
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_GE    shift, and go to state 164
    L_LE    shift, and go to state 166
    L_LSH   shift, and go to state 168
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 236 (expr0)


State 222

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  239      | expr0 L_GE expr0 .
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_LSH   shift, and go to state 168
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 239 (expr0)


State 223

  232 expr0: expr0 L_LAND @35 . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 314
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 224

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  241      | expr0 L_LE expr0 .
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_LSH   shift, and go to state 168
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 241 (expr0)


State 225

  230 expr0: expr0 L_LOR @34 . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 315
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 226

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  242      | expr0 L_LSH expr0 .
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    '+'  shift, and go to state 178
    '-'  shift, and go to state 179
    '*'  shift, and go to state 180
    '/'  shift, and go to state 181
    '%'  shift, and go to state 182

    $default  reduce using rule 242 (expr0)


State 227

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  237      | expr0 L_NE expr0 .
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_GE    shift, and go to state 164
    L_LE    shift, and go to state 166
    L_LSH   shift, and go to state 168
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 237 (expr0)


State 228

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  243      | expr0 L_RSH expr0 .
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    '+'  shift, and go to state 178
    '-'  shift, and go to state 179
    '*'  shift, and go to state 180
    '/'  shift, and go to state 181
    '%'  shift, and go to state 182

    $default  reduce using rule 243 (expr0)


State 229

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  244      | expr0 L_RSHL expr0 .
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    '+'  shift, and go to state 178
    '-'  shift, and go to state 179
    '*'  shift, and go to state 180
    '/'  shift, and go to state 181
    '%'  shift, and go to state 182

    $default  reduce using rule 244 (expr0)


State 230

  228 expr0: expr0 '?' @32 . expr0 @33 ':' expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 316
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 231

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  233      | expr0 '|' expr0 .
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LE    shift, and go to state 166
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 233 (expr0)


State 232

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  234      | expr0 '^' expr0 .
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LE    shift, and go to state 166
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 234 (expr0)


State 233

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  235      | expr0 '&' expr0 .
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LE    shift, and go to state 166
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 235 (expr0)


State 234

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  240      | expr0 '<' expr0 .
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_LSH   shift, and go to state 168
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 240 (expr0)


State 235

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  238      | expr0 '>' expr0 .
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_LSH   shift, and go to state 168
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 238 (expr0)


State 236

  246 expr0: expr0 '+' @36 . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 317
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 237

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  247      | expr0 '-' expr0 .
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    '*'  shift, and go to state 180
    '/'  shift, and go to state 181
    '%'  shift, and go to state 182

    $default  reduce using rule 247 (expr0)


State 238

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  248      | expr0 '*' expr0 .
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    $default  reduce using rule 248 (expr0)


State 239

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  250      | expr0 '/' expr0 .

    $default  reduce using rule 250 (expr0)


State 240

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  249      | expr0 '%' expr0 .
  250      | expr0 . '/' expr0

    $default  reduce using rule 249 (expr0)


State 241

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  260      | lvalue_reference L_ASSIGN expr0 .

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 260 (expr0)


State 242

  283 expr4: '(' '<' . note_start '>' ')'
  284      | '(' '<' . note_start error ')'
  286      | '(' '<' . identifier '>' @38 note_start opt_struct_init ')'

    L_IDENTIFIER  shift, and go to state 69
    L_LOCAL       shift, and go to state 63

    $default  reduce using rule 6 (note_start)

    note_start  go to state 212
    identifier  go to state 213


State 243

  278 expr4: '(' '{' . note_start expr_list '}' ')'

    $default  reduce using rule 6 (note_start)

    note_start  go to state 216


State 244

  343 struct_member_name: L_STRING . L_STRING
  344                   | L_STRING .
  360 call_other_name: L_STRING . L_STRING
  361                | L_STRING .

    L_STRING  shift, and go to state 318

    '('       reduce using rule 361 (call_other_name)
    $default  reduce using rule 344 (struct_member_name)


State 245

  345 struct_member_name: '(' . expr0 ')'
  362 call_other_name: '(' . expr0 ')'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 319
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 246

  342 struct_member_name: identifier .
  359 call_other_name: identifier .

    '('       reduce using rule 359 (call_other_name)
    $default  reduce using rule 342 (struct_member_name)


State 247

  289 expr4: expr4 L_ARROW struct_member_name .
  299 lvalue: expr4 L_ARROW struct_member_name .

    L_ASSIGN  reduce using rule 299 (lvalue)
    L_DEC     reduce using rule 299 (lvalue)
    L_INC     reduce using rule 299 (lvalue)
    $default  reduce using rule 289 (expr4)


State 248

  358 function_call: expr4 L_ARROW call_other_name . @40 '(' arg_expr_list ')'

    $default  reduce using rule 357 (@40)

    @40  go to state 320


State 249

  307 index_range: '[' L_RANGE . expr0 ']'
  308            | '[' L_RANGE . '<' expr0 ']'
  309            | '[' L_RANGE . '>' expr0 ']'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '<'                 shift, and go to state 321
    '>'                 shift, and go to state 322
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 323
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 250

  305 index_expr: '[' '<' . expr0 ']'
  312 index_range: '[' '<' . expr0 L_RANGE expr0 ']'
  313            | '[' '<' . expr0 L_RANGE '<' expr0 ']'
  316            | '[' '<' . expr0 L_RANGE '>' expr0 ']'
  320            | '[' '<' . expr0 L_RANGE ']'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 324
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 251

  306 index_expr: '[' '>' . expr0 ']'
  315 index_range: '[' '>' . expr0 L_RANGE expr0 ']'
  317            | '[' '>' . expr0 L_RANGE '<' expr0 ']'
  318            | '[' '>' . expr0 L_RANGE '>' expr0 ']'
  321            | '[' '>' . expr0 L_RANGE ']'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 325
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 252

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  292 expr4: expr4 '[' expr0 . ',' expr0 ']'
  297 lvalue: expr4 '[' expr0 . ',' expr0 ']'
  304 index_expr: '[' expr0 . ']'
  310 index_range: '[' expr0 . L_RANGE expr0 ']'
  311            | '[' expr0 . L_RANGE '<' expr0 ']'
  314            | '[' expr0 . L_RANGE '>' expr0 ']'
  319            | '[' expr0 . L_RANGE ']'

    L_EQ     shift, and go to state 163
    L_GE     shift, and go to state 164
    L_LAND   shift, and go to state 165
    L_LE     shift, and go to state 166
    L_LOR    shift, and go to state 167
    L_LSH    shift, and go to state 168
    L_NE     shift, and go to state 169
    L_RANGE  shift, and go to state 326
    L_RSH    shift, and go to state 170
    L_RSHL   shift, and go to state 171
    '?'      shift, and go to state 172
    '|'      shift, and go to state 173
    '^'      shift, and go to state 174
    '&'      shift, and go to state 175
    '<'      shift, and go to state 176
    '>'      shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '*'      shift, and go to state 180
    '/'      shift, and go to state 181
    '%'      shift, and go to state 182
    ','      shift, and go to state 327
    ']'      shift, and go to state 328


State 253

  224 expr0: lvalue L_ASSIGN @31 . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 329
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 254

  356 function_call: function_name @39 '(' . arg_expr_list ')'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    ')'  reduce using rule 327 (arg_expr_list)

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 330
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    arg_expr_list     go to state 331
    arg_expr_list2    go to state 332
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 255

  367 function_name: anchestor L_COLON_COLON L_IDENTIFIER .

    $default  reduce using rule 367 (function_name)


State 256

  368 function_name: anchestor L_COLON_COLON L_LOCAL .

    $default  reduce using rule 368 (function_name)


State 257

   41 opt_base_struct: '(' L_IDENTIFIER ')' .

    $default  reduce using rule 41 (opt_base_struct)


State 258

   39 struct_decl: type_modifier_list L_STRUCT L_IDENTIFIER $@8 opt_base_struct '{' opt_member_list . '}' ';'

    '}'  shift, and go to state 333


State 259

   43 opt_member_list: member_list .
   45 member_list: member_list . member

    L_CLOSURE_DECL  shift, and go to state 25
    L_FLOAT_DECL    shift, and go to state 26
    L_INT           shift, and go to state 27
    L_MAPPING       shift, and go to state 28
    L_MIXED         shift, and go to state 29
    L_OBJECT        shift, and go to state 33
    L_STATUS        shift, and go to state 38
    L_STRING_DECL   shift, and go to state 39
    L_STRUCT        shift, and go to state 55
    L_SYMBOL_DECL   shift, and go to state 41
    '<'             shift, and go to state 45

    $default  reduce using rule 43 (opt_member_list)

    member                      go to state 334
    member_name_list            go to state 261
    basic_non_void_type         go to state 262
    single_basic_non_void_type  go to state 49


State 260

   44 member_list: member .

    $default  reduce using rule 44 (member_list)


State 261

   46 member: member_name_list . ';'
   48 member_name_list: member_name_list . ',' optional_stars L_IDENTIFIER

    ';'  shift, and go to state 335
    ','  shift, and go to state 336


State 262

   47 member_name_list: basic_non_void_type . L_IDENTIFIER
   77 basic_non_void_type: basic_non_void_type . '|' single_basic_non_void_type

    L_IDENTIFIER  shift, and go to state 337
    '|'           shift, and go to state 66


State 263

  108 name_list: name_list ',' optional_stars L_IDENTIFIER @10 L_ASSIGN expr0 .
  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 108 (name_list)


State 264

   16 function_body: ';' .

    $default  reduce using rule 16 (function_body)


State 265

    9 def: type L_IDENTIFIER $@1 '(' argument ')' $@2 function_body .

    $default  reduce using rule 9 (def)


State 266

   15 function_body: @3 . block

    '{'  shift, and go to state 279

    block  go to state 338


State 267

  222 comma_expr: comma_expr . $@30 ',' expr0
  373 catch: L_CATCH @41 '(' comma_expr . note_start opt_catch_mods ')'

    ','       reduce using rule 221 ($@30)
    $default  reduce using rule 6 (note_start)

    note_start  go to state 339
    $@30        go to state 313


State 268

   24 inline_opt_args: '(' . argument ')'

    L_VOID  shift, and go to state 84

    ')'       reduce using rule 96 (argument)
    $default  reduce using rule 61 (type_modifier_list)

    non_void_type       go to state 85
    type_modifier_list  go to state 86
    argument            go to state 340
    argument_list       go to state 88
    new_arg_name        go to state 89


State 269

   20 inline_func: L_FUNC inline_opt_type $@4 inline_opt_args . $@5 inline_opt_context $@6 block

    $default  reduce using rule 18 ($@5)

    $@5  go to state 341


State 270

  128 statement: error . ';'
  225 expr0: error . L_ASSIGN expr0

    L_ASSIGN  shift, and go to state 138
    ';'       shift, and go to state 342


State 271

  138 statement: L_BREAK . ';'

    ';'  shift, and go to state 343


State 272

  139 statement: L_CONTINUE . ';'

    ';'  shift, and go to state 344


State 273

  152 for: L_FOR . '(' @20 for_init_expr ';' @21 for_expr ';' @22 for_expr ')' @23 statement

    '('  shift, and go to state 345


State 274

  166 foreach: L_FOREACH . '(' @25 foreach_vars foreach_in @26 foreach_expr ')' $@27 statement

    '('  shift, and go to state 346


State 275

  188 condStart: L_IF . '(' comma_expr ')'

    '('  shift, and go to state 347


State 276

  140 return: L_RETURN .
  141       | L_RETURN . comma_expr

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    ';'  reduce using rule 140 (return)

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    comma_expr        go to state 348
    expr0             go to state 219
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 277

  177 switch: L_SWITCH . '(' comma_expr ')' $@28 '{' switch_block '}'

    '('  shift, and go to state 349


State 278

  137 statement: ';' .

    $default  reduce using rule 137 (statement)


State 279

  109 block: '{' . statements_block '}'

    $default  reduce using rule 110 ($@11)

    statements_block  go to state 350
    $@11              go to state 351


State 280

   22 inline_func: L_BEGIN_INLINE $@7 statements inline_comma_expr . L_END_INLINE

    L_END_INLINE  shift, and go to state 352


State 281

  115 local_name_list: basic_type . L_IDENTIFIER
  116                | basic_type . L_LOCAL
  118                | basic_type . L_IDENTIFIER @12 L_ASSIGN expr0
  120                | basic_type . L_LOCAL @13 L_ASSIGN expr0

    L_IDENTIFIER  shift, and go to state 353
    L_LOCAL       shift, and go to state 354


State 282

  136 statement: block .

    $default  reduce using rule 136 (statement)


State 283

  113 statements: statements local_name_list . ';'
  121 local_name_list: local_name_list . ',' optional_stars L_IDENTIFIER
  122                | local_name_list . ',' optional_stars L_LOCAL
  124                | local_name_list . ',' optional_stars L_IDENTIFIER @14 L_ASSIGN expr0
  126                | local_name_list . ',' optional_stars L_LOCAL @15 L_ASSIGN expr0

    ';'  shift, and go to state 355
    ','  shift, and go to state 356


State 284

  114 statements: statements statement .

    $default  reduce using rule 114 (statements)


State 285

  135 statement: return . ';'

    ';'  shift, and go to state 357


State 286

  130 statement: while .

    $default  reduce using rule 130 (statement)


State 287

  144 while: @16 . L_WHILE '(' comma_expr ')' @17 statement

    L_WHILE  shift, and go to state 358


State 288

  131 statement: do .

    $default  reduce using rule 131 (statement)


State 289

  147 do: @18 . L_DO statement L_WHILE $@19 '(' comma_expr ')' ';'

    L_DO  shift, and go to state 359


State 290

  132 statement: for .

    $default  reduce using rule 132 (statement)


State 291

  133 statement: foreach .

    $default  reduce using rule 133 (statement)


State 292

  134 statement: switch .

    $default  reduce using rule 134 (statement)


State 293

  189 cond: condStart . statement optional_else

    error               shift, and go to state 270
    L_BREAK             shift, and go to state 271
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_CONTINUE          shift, and go to state 272
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_FOR               shift, and go to state 273
    L_FOREACH           shift, and go to state 274
    L_IDENTIFIER        shift, and go to state 99
    L_IF                shift, and go to state 275
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_RETURN            shift, and go to state 276
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SWITCH            shift, and go to state 277
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    ';'                 shift, and go to state 278
    '('                 shift, and go to state 112
    '{'                 shift, and go to state 279

    L_DO     reduce using rule 145 (@18)
    L_WHILE  reduce using rule 142 (@16)

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    block             go to state 282
    statement         go to state 360
    return            go to state 285
    while             go to state 286
    @16               go to state 287
    do                go to state 288
    @18               go to state 289
    for               go to state 290
    foreach           go to state 291
    switch            go to state 292
    condStart         go to state 293
    cond              go to state 294
    comma_expr        go to state 361
    expr0             go to state 219
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 294

  129 statement: cond .

    $default  reduce using rule 129 (statement)


State 295

   36 inline_comma_expr: comma_expr .
  127 statement: comma_expr . ';'
  222 comma_expr: comma_expr . $@30 ',' expr0

    ';'  shift, and go to state 362

    ','       reduce using rule 221 ($@30)
    $default  reduce using rule 36 (inline_comma_expr)

    $@30  go to state 313


State 296

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  381 parse_command: L_PARSE_COMMAND note_start '(' expr0 . ',' expr0 ',' expr0 lvalue_list ')'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ','     shift, and go to state 363


State 297

  279 expr4: L_QUOTED_AGGREGATE note_start expr_list '}' . ')'

    ')'  shift, and go to state 364


State 298

  324 expr_list: expr_list2 ',' .
  326 expr_list2: expr_list2 ',' . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    '}'  reduce using rule 324 (expr_list)

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 365
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 299

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  380 sscanf: L_SSCANF note_start '(' expr0 . ',' expr0 lvalue_list ')'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ','     shift, and go to state 366


State 300

  263 lvalue_reference: '&' '(' lvalue ')' .

    $default  reduce using rule 263 (lvalue_reference)


State 301

  264 lvalue_reference: '&' '(' function_call ')' .

    $default  reduce using rule 264 (lvalue_reference)


State 302

  284 expr4: '(' '<' note_start error . ')'

    ')'  shift, and go to state 367


State 303

  283 expr4: '(' '<' note_start '>' . ')'

    ')'  shift, and go to state 368


State 304

  286 expr4: '(' '<' identifier '>' . @38 note_start opt_struct_init ')'

    $default  reduce using rule 285 (@38)

    @38  go to state 369


State 305

  281 expr4: '(' '[' ':' note_start . $@37 expr0 ']' ')'

    $default  reduce using rule 280 ($@37)

    $@37  go to state 370


State 306

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  325 expr_list2: expr0 .
  338 m_expr_list2: expr0 . m_expr_values

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ':'     shift, and go to state 371

    $default  reduce using rule 325 (expr_list2)

    m_expr_values  go to state 372


State 307

  326 expr_list2: expr_list2 . ',' expr0
  336 m_expr_list: expr_list2 .
  337            | expr_list2 . ','

    ','  shift, and go to state 373

    $default  reduce using rule 336 (m_expr_list)


State 308

  282 expr4: '(' '[' note_start m_expr_list . ']' ')'

    ']'  shift, and go to state 374


State 309

  334 m_expr_list: m_expr_list2 .
  335            | m_expr_list2 . ','
  339 m_expr_list2: m_expr_list2 . ',' expr0 m_expr_values

    ','  shift, and go to state 375

    $default  reduce using rule 334 (m_expr_list)


State 310

  278 expr4: '(' '{' note_start expr_list . '}' ')'

    '}'  shift, and go to state 376


State 311

   93 decl_cast: '(' '{' basic_type '}' . ')'

    ')'  shift, and go to state 377


State 312

  277 expr4: '(' note_start comma_expr ')' .

    $default  reduce using rule 277 (expr4)


State 313

  222 comma_expr: comma_expr $@30 . ',' expr0

    ','  shift, and go to state 378


State 314

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  232      | expr0 L_LAND @35 expr0 .
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LE    shift, and go to state 166
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 232 (expr0)


State 315

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  230      | expr0 L_LOR @34 expr0 .
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 230 (expr0)


State 316

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  228      | expr0 '?' @32 expr0 . @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 227 (@33)

    @33  go to state 379


State 317

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  246      | expr0 '+' @36 expr0 .
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    '*'  shift, and go to state 180
    '/'  shift, and go to state 181
    '%'  shift, and go to state 182

    $default  reduce using rule 246 (expr0)


State 318

  343 struct_member_name: L_STRING L_STRING .
  360 call_other_name: L_STRING L_STRING .

    '('       reduce using rule 360 (call_other_name)
    $default  reduce using rule 343 (struct_member_name)


State 319

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  345 struct_member_name: '(' expr0 . ')'
  362 call_other_name: '(' expr0 . ')'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ')'     shift, and go to state 380


State 320

  358 function_call: expr4 L_ARROW call_other_name @40 . '(' arg_expr_list ')'

    '('  shift, and go to state 381


State 321

  308 index_range: '[' L_RANGE '<' . expr0 ']'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 382
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 322

  309 index_range: '[' L_RANGE '>' . expr0 ']'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 383
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 323

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  307 index_range: '[' L_RANGE expr0 . ']'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ']'     shift, and go to state 384


State 324

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  305 index_expr: '[' '<' expr0 . ']'
  312 index_range: '[' '<' expr0 . L_RANGE expr0 ']'
  313            | '[' '<' expr0 . L_RANGE '<' expr0 ']'
  316            | '[' '<' expr0 . L_RANGE '>' expr0 ']'
  320            | '[' '<' expr0 . L_RANGE ']'

    L_EQ     shift, and go to state 163
    L_GE     shift, and go to state 164
    L_LAND   shift, and go to state 165
    L_LE     shift, and go to state 166
    L_LOR    shift, and go to state 167
    L_LSH    shift, and go to state 168
    L_NE     shift, and go to state 169
    L_RANGE  shift, and go to state 385
    L_RSH    shift, and go to state 170
    L_RSHL   shift, and go to state 171
    '?'      shift, and go to state 172
    '|'      shift, and go to state 173
    '^'      shift, and go to state 174
    '&'      shift, and go to state 175
    '<'      shift, and go to state 176
    '>'      shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '*'      shift, and go to state 180
    '/'      shift, and go to state 181
    '%'      shift, and go to state 182
    ']'      shift, and go to state 386


State 325

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  306 index_expr: '[' '>' expr0 . ']'
  315 index_range: '[' '>' expr0 . L_RANGE expr0 ']'
  317            | '[' '>' expr0 . L_RANGE '<' expr0 ']'
  318            | '[' '>' expr0 . L_RANGE '>' expr0 ']'
  321            | '[' '>' expr0 . L_RANGE ']'

    L_EQ     shift, and go to state 163
    L_GE     shift, and go to state 164
    L_LAND   shift, and go to state 165
    L_LE     shift, and go to state 166
    L_LOR    shift, and go to state 167
    L_LSH    shift, and go to state 168
    L_NE     shift, and go to state 169
    L_RANGE  shift, and go to state 387
    L_RSH    shift, and go to state 170
    L_RSHL   shift, and go to state 171
    '?'      shift, and go to state 172
    '|'      shift, and go to state 173
    '^'      shift, and go to state 174
    '&'      shift, and go to state 175
    '<'      shift, and go to state 176
    '>'      shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '*'      shift, and go to state 180
    '/'      shift, and go to state 181
    '%'      shift, and go to state 182
    ']'      shift, and go to state 388


State 326

  310 index_range: '[' expr0 L_RANGE . expr0 ']'
  311            | '[' expr0 L_RANGE . '<' expr0 ']'
  314            | '[' expr0 L_RANGE . '>' expr0 ']'
  319            | '[' expr0 L_RANGE . ']'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '<'                 shift, and go to state 389
    '>'                 shift, and go to state 390
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112
    ']'                 shift, and go to state 391

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 392
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 327

  292 expr4: expr4 '[' expr0 ',' . expr0 ']'
  297 lvalue: expr4 '[' expr0 ',' . expr0 ']'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 393
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 328

  304 index_expr: '[' expr0 ']' .

    $default  reduce using rule 304 (index_expr)


State 329

  224 expr0: lvalue L_ASSIGN @31 expr0 .
  228      | expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 224 (expr0)


State 330

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  329 arg_expr_list2: expr0 .
  330               | expr0 . L_ELLIPSIS

    L_ELLIPSIS  shift, and go to state 394
    L_EQ        shift, and go to state 163
    L_GE        shift, and go to state 164
    L_LAND      shift, and go to state 165
    L_LE        shift, and go to state 166
    L_LOR       shift, and go to state 167
    L_LSH       shift, and go to state 168
    L_NE        shift, and go to state 169
    L_RSH       shift, and go to state 170
    L_RSHL      shift, and go to state 171
    '?'         shift, and go to state 172
    '|'         shift, and go to state 173
    '^'         shift, and go to state 174
    '&'         shift, and go to state 175
    '<'         shift, and go to state 176
    '>'         shift, and go to state 177
    '+'         shift, and go to state 178
    '-'         shift, and go to state 179
    '*'         shift, and go to state 180
    '/'         shift, and go to state 181
    '%'         shift, and go to state 182

    $default  reduce using rule 329 (arg_expr_list2)


State 331

  356 function_call: function_name @39 '(' arg_expr_list . ')'

    ')'  shift, and go to state 395


State 332

  328 arg_expr_list: arg_expr_list2 .
  331 arg_expr_list2: arg_expr_list2 . ',' expr0
  332               | arg_expr_list2 . ',' expr0 L_ELLIPSIS

    ','  shift, and go to state 396

    $default  reduce using rule 328 (arg_expr_list)


State 333

   39 struct_decl: type_modifier_list L_STRUCT L_IDENTIFIER $@8 opt_base_struct '{' opt_member_list '}' . ';'

    ';'  shift, and go to state 397


State 334

   45 member_list: member_list member .

    $default  reduce using rule 45 (member_list)


State 335

   46 member: member_name_list ';' .

    $default  reduce using rule 46 (member)


State 336

   48 member_name_list: member_name_list ',' . optional_stars L_IDENTIFIER

    $default  reduce using rule 57 (optional_stars)

    optional_stars  go to state 398


State 337

   47 member_name_list: basic_non_void_type L_IDENTIFIER .

    $default  reduce using rule 47 (member_name_list)


State 338

   15 function_body: @3 block .

    $default  reduce using rule 15 (function_body)


State 339

  373 catch: L_CATCH @41 '(' comma_expr note_start . opt_catch_mods ')'

    ';'  shift, and go to state 399

    $default  reduce using rule 375 (opt_catch_mods)

    opt_catch_mods  go to state 400


State 340

   24 inline_opt_args: '(' argument . ')'

    ')'  shift, and go to state 401


State 341

   20 inline_func: L_FUNC inline_opt_type $@4 inline_opt_args $@5 . inline_opt_context $@6 block

    ':'  shift, and go to state 402

    $default  reduce using rule 27 (inline_opt_context)

    inline_opt_context  go to state 403


State 342

  128 statement: error ';' .

    $default  reduce using rule 128 (statement)


State 343

  138 statement: L_BREAK ';' .

    $default  reduce using rule 138 (statement)


State 344

  139 statement: L_CONTINUE ';' .

    $default  reduce using rule 139 (statement)


State 345

  152 for: L_FOR '(' . @20 for_init_expr ';' @21 for_expr ';' @22 for_expr ')' @23 statement

    $default  reduce using rule 148 (@20)

    @20  go to state 404


State 346

  166 foreach: L_FOREACH '(' . @25 foreach_vars foreach_in @26 foreach_expr ')' $@27 statement

    $default  reduce using rule 163 (@25)

    @25  go to state 405


State 347

  188 condStart: L_IF '(' . comma_expr ')'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    comma_expr        go to state 406
    expr0             go to state 219
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 348

  141 return: L_RETURN comma_expr .
  222 comma_expr: comma_expr . $@30 ',' expr0

    ','       reduce using rule 221 ($@30)
    $default  reduce using rule 141 (return)

    $@30  go to state 313


State 349

  177 switch: L_SWITCH '(' . comma_expr ')' $@28 '{' switch_block '}'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    comma_expr        go to state 407
    expr0             go to state 219
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 350

  109 block: '{' statements_block . '}'

    '}'  shift, and go to state 408


State 351

  111 statements_block: $@11 . statements

    $default  reduce using rule 112 (statements)

    statements  go to state 409


State 352

   22 inline_func: L_BEGIN_INLINE $@7 statements inline_comma_expr L_END_INLINE .

    $default  reduce using rule 22 (inline_func)


State 353

  115 local_name_list: basic_type L_IDENTIFIER .
  118                | basic_type L_IDENTIFIER . @12 L_ASSIGN expr0

    L_ASSIGN  reduce using rule 117 (@12)
    $default  reduce using rule 115 (local_name_list)

    @12  go to state 410


State 354

  116 local_name_list: basic_type L_LOCAL .
  120                | basic_type L_LOCAL . @13 L_ASSIGN expr0

    L_ASSIGN  reduce using rule 119 (@13)
    $default  reduce using rule 116 (local_name_list)

    @13  go to state 411


State 355

  113 statements: statements local_name_list ';' .

    $default  reduce using rule 113 (statements)


State 356

  121 local_name_list: local_name_list ',' . optional_stars L_IDENTIFIER
  122                | local_name_list ',' . optional_stars L_LOCAL
  124                | local_name_list ',' . optional_stars L_IDENTIFIER @14 L_ASSIGN expr0
  126                | local_name_list ',' . optional_stars L_LOCAL @15 L_ASSIGN expr0

    $default  reduce using rule 57 (optional_stars)

    optional_stars  go to state 412


State 357

  135 statement: return ';' .

    $default  reduce using rule 135 (statement)


State 358

  144 while: @16 L_WHILE . '(' comma_expr ')' @17 statement

    '('  shift, and go to state 413


State 359

  147 do: @18 L_DO . statement L_WHILE $@19 '(' comma_expr ')' ';'

    error               shift, and go to state 270
    L_BREAK             shift, and go to state 271
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_CONTINUE          shift, and go to state 272
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_FOR               shift, and go to state 273
    L_FOREACH           shift, and go to state 274
    L_IDENTIFIER        shift, and go to state 99
    L_IF                shift, and go to state 275
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_RETURN            shift, and go to state 276
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SWITCH            shift, and go to state 277
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    ';'                 shift, and go to state 278
    '('                 shift, and go to state 112
    '{'                 shift, and go to state 279

    L_DO     reduce using rule 145 (@18)
    L_WHILE  reduce using rule 142 (@16)

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    block             go to state 282
    statement         go to state 414
    return            go to state 285
    while             go to state 286
    @16               go to state 287
    do                go to state 288
    @18               go to state 289
    for               go to state 290
    foreach           go to state 291
    switch            go to state 292
    condStart         go to state 293
    cond              go to state 294
    comma_expr        go to state 361
    expr0             go to state 219
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 360

  189 cond: condStart statement . optional_else

    L_ELSE  shift, and go to state 415

    $default  reduce using rule 190 (optional_else)

    optional_else  go to state 416


State 361

  127 statement: comma_expr . ';'
  222 comma_expr: comma_expr . $@30 ',' expr0

    ';'  shift, and go to state 362

    $default  reduce using rule 221 ($@30)

    $@30  go to state 313


State 362

  127 statement: comma_expr ';' .

    $default  reduce using rule 127 (statement)


State 363

  381 parse_command: L_PARSE_COMMAND note_start '(' expr0 ',' . expr0 ',' expr0 lvalue_list ')'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 417
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 364

  279 expr4: L_QUOTED_AGGREGATE note_start expr_list '}' ')' .

    $default  reduce using rule 279 (expr4)


State 365

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  326 expr_list2: expr_list2 ',' expr0 .

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 326 (expr_list2)


State 366

  380 sscanf: L_SSCANF note_start '(' expr0 ',' . expr0 lvalue_list ')'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 418
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 367

  284 expr4: '(' '<' note_start error ')' .

    $default  reduce using rule 284 (expr4)


State 368

  283 expr4: '(' '<' note_start '>' ')' .

    $default  reduce using rule 283 (expr4)


State 369

  286 expr4: '(' '<' identifier '>' @38 . note_start opt_struct_init ')'

    $default  reduce using rule 6 (note_start)

    note_start  go to state 419


State 370

  281 expr4: '(' '[' ':' note_start $@37 . expr0 ']' ')'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 420
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 371

  340 m_expr_values: ':' . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 421
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 372

  338 m_expr_list2: expr0 m_expr_values .
  341 m_expr_values: m_expr_values . ';' expr0

    ';'  shift, and go to state 422

    $default  reduce using rule 338 (m_expr_list2)


State 373

  326 expr_list2: expr_list2 ',' . expr0
  337 m_expr_list: expr_list2 ',' .

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    ']'  reduce using rule 337 (m_expr_list)

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 365
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 374

  282 expr4: '(' '[' note_start m_expr_list ']' . ')'

    ')'  shift, and go to state 423


State 375

  335 m_expr_list: m_expr_list2 ',' .
  339 m_expr_list2: m_expr_list2 ',' . expr0 m_expr_values

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    ']'  reduce using rule 335 (m_expr_list)

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 424
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 376

  278 expr4: '(' '{' note_start expr_list '}' . ')'

    ')'  shift, and go to state 425


State 377

   93 decl_cast: '(' '{' basic_type '}' ')' .

    $default  reduce using rule 93 (decl_cast)


State 378

  222 comma_expr: comma_expr $@30 ',' . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 426
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 379

  228 expr0: expr0 '?' @32 expr0 @33 . ':' expr0

    ':'  shift, and go to state 427


State 380

  345 struct_member_name: '(' expr0 ')' .
  362 call_other_name: '(' expr0 ')' .

    '('       reduce using rule 362 (call_other_name)
    $default  reduce using rule 345 (struct_member_name)


State 381

  358 function_call: expr4 L_ARROW call_other_name @40 '(' . arg_expr_list ')'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    ')'  reduce using rule 327 (arg_expr_list)

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 330
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    arg_expr_list     go to state 428
    arg_expr_list2    go to state 332
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 382

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  308 index_range: '[' L_RANGE '<' expr0 . ']'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ']'     shift, and go to state 429


State 383

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  309 index_range: '[' L_RANGE '>' expr0 . ']'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ']'     shift, and go to state 430


State 384

  307 index_range: '[' L_RANGE expr0 ']' .

    $default  reduce using rule 307 (index_range)


State 385

  312 index_range: '[' '<' expr0 L_RANGE . expr0 ']'
  313            | '[' '<' expr0 L_RANGE . '<' expr0 ']'
  316            | '[' '<' expr0 L_RANGE . '>' expr0 ']'
  320            | '[' '<' expr0 L_RANGE . ']'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '<'                 shift, and go to state 431
    '>'                 shift, and go to state 432
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112
    ']'                 shift, and go to state 433

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 434
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 386

  305 index_expr: '[' '<' expr0 ']' .

    $default  reduce using rule 305 (index_expr)


State 387

  315 index_range: '[' '>' expr0 L_RANGE . expr0 ']'
  317            | '[' '>' expr0 L_RANGE . '<' expr0 ']'
  318            | '[' '>' expr0 L_RANGE . '>' expr0 ']'
  321            | '[' '>' expr0 L_RANGE . ']'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '<'                 shift, and go to state 435
    '>'                 shift, and go to state 436
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112
    ']'                 shift, and go to state 437

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 438
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 388

  306 index_expr: '[' '>' expr0 ']' .

    $default  reduce using rule 306 (index_expr)


State 389

  311 index_range: '[' expr0 L_RANGE '<' . expr0 ']'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 439
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 390

  314 index_range: '[' expr0 L_RANGE '>' . expr0 ']'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 440
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 391

  319 index_range: '[' expr0 L_RANGE ']' .

    $default  reduce using rule 319 (index_range)


State 392

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  310 index_range: '[' expr0 L_RANGE expr0 . ']'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ']'     shift, and go to state 441


State 393

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  292 expr4: expr4 '[' expr0 ',' expr0 . ']'
  297 lvalue: expr4 '[' expr0 ',' expr0 . ']'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ']'     shift, and go to state 442


State 394

  330 arg_expr_list2: expr0 L_ELLIPSIS .

    $default  reduce using rule 330 (arg_expr_list2)


State 395

  356 function_call: function_name @39 '(' arg_expr_list ')' .

    $default  reduce using rule 356 (function_call)


State 396

  331 arg_expr_list2: arg_expr_list2 ',' . expr0
  332               | arg_expr_list2 ',' . expr0 L_ELLIPSIS

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 443
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 397

   39 struct_decl: type_modifier_list L_STRUCT L_IDENTIFIER $@8 opt_base_struct '{' opt_member_list '}' ';' .

    $default  reduce using rule 39 (struct_decl)


State 398

   48 member_name_list: member_name_list ',' optional_stars . L_IDENTIFIER
   58 optional_stars: optional_stars . '*'

    L_IDENTIFIER  shift, and go to state 444
    '*'           shift, and go to state 81


State 399

  374 opt_catch_mods: ';' . opt_catch_mod_list

    L_IDENTIFIER  shift, and go to state 69
    L_LOCAL       shift, and go to state 63

    identifier          go to state 445
    opt_catch_mod_list  go to state 446
    opt_catch_modifier  go to state 447


State 400

  373 catch: L_CATCH @41 '(' comma_expr note_start opt_catch_mods . ')'

    ')'  shift, and go to state 448


State 401

   24 inline_opt_args: '(' argument ')' .

    $default  reduce using rule 24 (inline_opt_args)


State 402

   28 inline_opt_context: ':' . inline_context_list inline_semi

    L_CLOSURE_DECL  shift, and go to state 25
    L_FLOAT_DECL    shift, and go to state 26
    L_INT           shift, and go to state 27
    L_MAPPING       shift, and go to state 28
    L_MIXED         shift, and go to state 29
    L_OBJECT        shift, and go to state 33
    L_STATUS        shift, and go to state 38
    L_STRING_DECL   shift, and go to state 39
    L_STRUCT        shift, and go to state 55
    L_SYMBOL_DECL   shift, and go to state 41
    L_VOID          shift, and go to state 44
    '<'             shift, and go to state 45

    $default  reduce using rule 31 (inline_context_list)

    inline_context_list         go to state 449
    context_decl                go to state 450
    basic_non_void_type         go to state 48
    single_basic_non_void_type  go to state 49
    basic_type                  go to state 281
    local_name_list             go to state 451


State 403

   20 inline_func: L_FUNC inline_opt_type $@4 inline_opt_args $@5 inline_opt_context . $@6 block

    $default  reduce using rule 19 ($@6)

    $@6  go to state 452


State 404

  152 for: L_FOR '(' @20 . for_init_expr ';' @21 for_expr ';' @22 for_expr ')' @23 statement

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_CLOSURE_DECL      shift, and go to state 25
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_FLOAT_DECL        shift, and go to state 26
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_INT               shift, and go to state 27
    L_LOCAL             shift, and go to state 101
    L_MAPPING           shift, and go to state 28
    L_MIXED             shift, and go to state 29
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_OBJECT            shift, and go to state 33
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STATUS            shift, and go to state 38
    L_STRING            shift, and go to state 107
    L_STRING_DECL       shift, and go to state 39
    L_STRUCT            shift, and go to state 55
    L_SYMBOL            shift, and go to state 108
    L_SYMBOL_DECL       shift, and go to state 41
    L_VOID              shift, and go to state 44
    '&'                 shift, and go to state 109
    '<'                 shift, and go to state 45
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    ';'  reduce using rule 153 (for_init_expr)

    inline_func                 go to state 113
    basic_non_void_type         go to state 48
    single_basic_non_void_type  go to state 49
    basic_type                  go to state 453
    cast                        go to state 114
    decl_cast                   go to state 115
    for_init_expr               go to state 454
    comma_expr_decl             go to state 455
    expr_decl                   go to state 456
    expr0                       go to state 457
    lvalue_reference            go to state 117
    pre_inc_dec                 go to state 118
    expr4                       go to state 119
    name_lvalue                 go to state 120
    lvalue                      go to state 121
    local_name_lvalue           go to state 458
    function_call               go to state 122
    function_name               go to state 123
    anchestor                   go to state 124
    catch                       go to state 125
    sscanf                      go to state 126
    parse_command               go to state 127


State 405

  166 foreach: L_FOREACH '(' @25 . foreach_vars foreach_in @26 foreach_expr ')' $@27 statement

    L_CLOSURE_DECL  shift, and go to state 25
    L_FLOAT_DECL    shift, and go to state 26
    L_IDENTIFIER    shift, and go to state 150
    L_INT           shift, and go to state 27
    L_LOCAL         shift, and go to state 151
    L_MAPPING       shift, and go to state 28
    L_MIXED         shift, and go to state 29
    L_OBJECT        shift, and go to state 33
    L_STATUS        shift, and go to state 38
    L_STRING_DECL   shift, and go to state 39
    L_STRUCT        shift, and go to state 55
    L_SYMBOL_DECL   shift, and go to state 41
    L_VOID          shift, and go to state 44
    '<'             shift, and go to state 45

    basic_non_void_type         go to state 48
    single_basic_non_void_type  go to state 49
    basic_type                  go to state 453
    foreach_vars                go to state 459
    foreach_var_decl            go to state 460
    foreach_var_lvalue          go to state 461
    name_lvalue                 go to state 462
    name_var_lvalue             go to state 463
    local_name_lvalue           go to state 464


State 406

  188 condStart: L_IF '(' comma_expr . ')'
  222 comma_expr: comma_expr . $@30 ',' expr0

    ')'  shift, and go to state 465

    $default  reduce using rule 221 ($@30)

    $@30  go to state 313


State 407

  177 switch: L_SWITCH '(' comma_expr . ')' $@28 '{' switch_block '}'
  222 comma_expr: comma_expr . $@30 ',' expr0

    ')'  shift, and go to state 466

    $default  reduce using rule 221 ($@30)

    $@30  go to state 313


State 408

  109 block: '{' statements_block '}' .

    $default  reduce using rule 109 (block)


State 409

  111 statements_block: $@11 statements .
  113 statements: statements . local_name_list ';'
  114           | statements . statement

    error               shift, and go to state 270
    L_BREAK             shift, and go to state 271
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_CLOSURE_DECL      shift, and go to state 25
    L_COLON_COLON       shift, and go to state 93
    L_CONTINUE          shift, and go to state 272
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_FLOAT_DECL        shift, and go to state 26
    L_FOR               shift, and go to state 273
    L_FOREACH           shift, and go to state 274
    L_IDENTIFIER        shift, and go to state 99
    L_IF                shift, and go to state 275
    L_INC               shift, and go to state 100
    L_INT               shift, and go to state 27
    L_LOCAL             shift, and go to state 101
    L_MAPPING           shift, and go to state 28
    L_MIXED             shift, and go to state 29
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_OBJECT            shift, and go to state 33
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_RETURN            shift, and go to state 276
    L_SSCANF            shift, and go to state 106
    L_STATUS            shift, and go to state 38
    L_STRING            shift, and go to state 107
    L_STRING_DECL       shift, and go to state 39
    L_STRUCT            shift, and go to state 55
    L_SWITCH            shift, and go to state 277
    L_SYMBOL            shift, and go to state 108
    L_SYMBOL_DECL       shift, and go to state 41
    L_VOID              shift, and go to state 44
    '&'                 shift, and go to state 109
    '<'                 shift, and go to state 45
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    ';'                 shift, and go to state 278
    '('                 shift, and go to state 112
    '{'                 shift, and go to state 279

    L_CASE     reduce using rule 111 (statements_block)
    L_DEFAULT  reduce using rule 111 (statements_block)
    L_DO       reduce using rule 145 (@18)
    L_WHILE    reduce using rule 142 (@16)
    '}'        reduce using rule 111 (statements_block)

    inline_func                 go to state 113
    basic_non_void_type         go to state 48
    single_basic_non_void_type  go to state 49
    basic_type                  go to state 281
    cast                        go to state 114
    decl_cast                   go to state 115
    block                       go to state 282
    local_name_list             go to state 283
    statement                   go to state 284
    return                      go to state 285
    while                       go to state 286
    @16                         go to state 287
    do                          go to state 288
    @18                         go to state 289
    for                         go to state 290
    foreach                     go to state 291
    switch                      go to state 292
    condStart                   go to state 293
    cond                        go to state 294
    comma_expr                  go to state 361
    expr0                       go to state 219
    lvalue_reference            go to state 117
    pre_inc_dec                 go to state 118
    expr4                       go to state 119
    name_lvalue                 go to state 120
    lvalue                      go to state 121
    function_call               go to state 122
    function_name               go to state 123
    anchestor                   go to state 124
    catch                       go to state 125
    sscanf                      go to state 126
    parse_command               go to state 127


State 410

  118 local_name_list: basic_type L_IDENTIFIER @12 . L_ASSIGN expr0

    L_ASSIGN  shift, and go to state 467


State 411

  120 local_name_list: basic_type L_LOCAL @13 . L_ASSIGN expr0

    L_ASSIGN  shift, and go to state 468


State 412

   58 optional_stars: optional_stars . '*'
  121 local_name_list: local_name_list ',' optional_stars . L_IDENTIFIER
  122                | local_name_list ',' optional_stars . L_LOCAL
  124                | local_name_list ',' optional_stars . L_IDENTIFIER @14 L_ASSIGN expr0
  126                | local_name_list ',' optional_stars . L_LOCAL @15 L_ASSIGN expr0

    L_IDENTIFIER  shift, and go to state 469
    L_LOCAL       shift, and go to state 470
    '*'           shift, and go to state 81


State 413

  144 while: @16 L_WHILE '(' . comma_expr ')' @17 statement

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    comma_expr        go to state 471
    expr0             go to state 219
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 414

  147 do: @18 L_DO statement . L_WHILE $@19 '(' comma_expr ')' ';'

    L_WHILE  shift, and go to state 472


State 415

  192 optional_else: L_ELSE . @29 statement

    $default  reduce using rule 191 (@29)

    @29  go to state 473


State 416

  189 cond: condStart statement optional_else .

    $default  reduce using rule 189 (cond)


State 417

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  381 parse_command: L_PARSE_COMMAND note_start '(' expr0 ',' expr0 . ',' expr0 lvalue_list ')'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ','     shift, and go to state 474


State 418

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  380 sscanf: L_SSCANF note_start '(' expr0 ',' expr0 . lvalue_list ')'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 382 (lvalue_list)

    lvalue_list  go to state 475


State 419

  286 expr4: '(' '<' identifier '>' @38 note_start . opt_struct_init ')'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 476
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 477
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    ')'  reduce using rule 346 (opt_struct_init)

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    identifier        go to state 478
    expr0             go to state 479
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    opt_struct_init   go to state 480
    opt_struct_init2  go to state 481
    struct_init       go to state 482
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 420

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  281 expr4: '(' '[' ':' note_start $@37 expr0 . ']' ')'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ']'     shift, and go to state 483


State 421

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  340 m_expr_values: ':' expr0 .

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 340 (m_expr_values)


State 422

  341 m_expr_values: m_expr_values ';' . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 484
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 423

  282 expr4: '(' '[' note_start m_expr_list ']' ')' .

    $default  reduce using rule 282 (expr4)


State 424

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  339 m_expr_list2: m_expr_list2 ',' expr0 . m_expr_values

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ':'     shift, and go to state 371

    m_expr_values  go to state 485


State 425

  278 expr4: '(' '{' note_start expr_list '}' ')' .

    $default  reduce using rule 278 (expr4)


State 426

  222 comma_expr: comma_expr $@30 ',' expr0 .
  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 222 (comma_expr)


State 427

  228 expr0: expr0 '?' @32 expr0 @33 ':' . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 486
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 428

  358 function_call: expr4 L_ARROW call_other_name @40 '(' arg_expr_list . ')'

    ')'  shift, and go to state 487


State 429

  308 index_range: '[' L_RANGE '<' expr0 ']' .

    $default  reduce using rule 308 (index_range)


State 430

  309 index_range: '[' L_RANGE '>' expr0 ']' .

    $default  reduce using rule 309 (index_range)


State 431

  313 index_range: '[' '<' expr0 L_RANGE '<' . expr0 ']'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 488
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 432

  316 index_range: '[' '<' expr0 L_RANGE '>' . expr0 ']'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 489
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 433

  320 index_range: '[' '<' expr0 L_RANGE ']' .

    $default  reduce using rule 320 (index_range)


State 434

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  312 index_range: '[' '<' expr0 L_RANGE expr0 . ']'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ']'     shift, and go to state 490


State 435

  317 index_range: '[' '>' expr0 L_RANGE '<' . expr0 ']'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 491
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 436

  318 index_range: '[' '>' expr0 L_RANGE '>' . expr0 ']'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 492
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 437

  321 index_range: '[' '>' expr0 L_RANGE ']' .

    $default  reduce using rule 321 (index_range)


State 438

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  315 index_range: '[' '>' expr0 L_RANGE expr0 . ']'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ']'     shift, and go to state 493


State 439

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  311 index_range: '[' expr0 L_RANGE '<' expr0 . ']'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ']'     shift, and go to state 494


State 440

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  314 index_range: '[' expr0 L_RANGE '>' expr0 . ']'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ']'     shift, and go to state 495


State 441

  310 index_range: '[' expr0 L_RANGE expr0 ']' .

    $default  reduce using rule 310 (index_range)


State 442

  292 expr4: expr4 '[' expr0 ',' expr0 ']' .
  297 lvalue: expr4 '[' expr0 ',' expr0 ']' .

    L_ASSIGN  reduce using rule 297 (lvalue)
    L_DEC     reduce using rule 297 (lvalue)
    L_INC     reduce using rule 297 (lvalue)
    $default  reduce using rule 292 (expr4)


State 443

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  331 arg_expr_list2: arg_expr_list2 ',' expr0 .
  332               | arg_expr_list2 ',' expr0 . L_ELLIPSIS

    L_ELLIPSIS  shift, and go to state 496
    L_EQ        shift, and go to state 163
    L_GE        shift, and go to state 164
    L_LAND      shift, and go to state 165
    L_LE        shift, and go to state 166
    L_LOR       shift, and go to state 167
    L_LSH       shift, and go to state 168
    L_NE        shift, and go to state 169
    L_RSH       shift, and go to state 170
    L_RSHL      shift, and go to state 171
    '?'         shift, and go to state 172
    '|'         shift, and go to state 173
    '^'         shift, and go to state 174
    '&'         shift, and go to state 175
    '<'         shift, and go to state 176
    '>'         shift, and go to state 177
    '+'         shift, and go to state 178
    '-'         shift, and go to state 179
    '*'         shift, and go to state 180
    '/'         shift, and go to state 181
    '%'         shift, and go to state 182

    $default  reduce using rule 331 (arg_expr_list2)


State 444

   48 member_name_list: member_name_list ',' optional_stars L_IDENTIFIER .

    $default  reduce using rule 48 (member_name_list)


State 445

  378 opt_catch_modifier: identifier .
  379                   | identifier . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    ')'  reduce using rule 378 (opt_catch_modifier)
    ','  reduce using rule 378 (opt_catch_modifier)

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 497
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 446

  374 opt_catch_mods: ';' opt_catch_mod_list .
  376 opt_catch_mod_list: opt_catch_mod_list . ',' opt_catch_modifier

    ','  shift, and go to state 498

    $default  reduce using rule 374 (opt_catch_mods)


State 447

  377 opt_catch_mod_list: opt_catch_modifier .

    $default  reduce using rule 377 (opt_catch_mod_list)


State 448

  373 catch: L_CATCH @41 '(' comma_expr note_start opt_catch_mods ')' .

    $default  reduce using rule 373 (catch)


State 449

   28 inline_opt_context: ':' inline_context_list . inline_semi
   33 inline_context_list: inline_context_list . ';' context_decl

    ';'  shift, and go to state 499

    $default  reduce using rule 29 (inline_semi)

    inline_semi  go to state 500


State 450

   32 inline_context_list: context_decl .

    $default  reduce using rule 32 (inline_context_list)


State 451

   34 context_decl: local_name_list .
  121 local_name_list: local_name_list . ',' optional_stars L_IDENTIFIER
  122                | local_name_list . ',' optional_stars L_LOCAL
  124                | local_name_list . ',' optional_stars L_IDENTIFIER @14 L_ASSIGN expr0
  126                | local_name_list . ',' optional_stars L_LOCAL @15 L_ASSIGN expr0

    ','  shift, and go to state 356

    $default  reduce using rule 34 (context_decl)


State 452

   20 inline_func: L_FUNC inline_opt_type $@4 inline_opt_args $@5 inline_opt_context $@6 . block

    '{'  shift, and go to state 279

    block  go to state 501


State 453

  302 local_name_lvalue: basic_type . L_IDENTIFIER
  303                  | basic_type . L_LOCAL

    L_IDENTIFIER  shift, and go to state 502
    L_LOCAL       shift, and go to state 503


State 454

  152 for: L_FOR '(' @20 for_init_expr . ';' @21 for_expr ';' @22 for_expr ')' @23 statement

    ';'  shift, and go to state 504


State 455

  154 for_init_expr: comma_expr_decl .
  157 comma_expr_decl: comma_expr_decl . $@24 ',' expr_decl

    ','       reduce using rule 156 ($@24)
    $default  reduce using rule 154 (for_init_expr)

    $@24  go to state 505


State 456

  155 comma_expr_decl: expr_decl .

    $default  reduce using rule 155 (comma_expr_decl)


State 457

  158 expr_decl: expr0 .
  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 158 (expr_decl)


State 458

  159 expr_decl: local_name_lvalue . L_ASSIGN expr0
  160          | local_name_lvalue .

    L_ASSIGN  shift, and go to state 506

    $default  reduce using rule 160 (expr_decl)


State 459

  166 foreach: L_FOREACH '(' @25 foreach_vars . foreach_in @26 foreach_expr ')' $@27 statement
  168 foreach_vars: foreach_vars . ',' foreach_var_decl

    L_IDENTIFIER  shift, and go to state 69
    L_LOCAL       shift, and go to state 63
    ':'           shift, and go to state 507
    ','           shift, and go to state 508

    identifier  go to state 509
    foreach_in  go to state 510


State 460

  167 foreach_vars: foreach_var_decl .

    $default  reduce using rule 167 (foreach_vars)


State 461

  169 foreach_var_decl: foreach_var_lvalue .

    $default  reduce using rule 169 (foreach_var_decl)


State 462

  301 name_var_lvalue: name_lvalue .

    $default  reduce using rule 301 (name_var_lvalue)


State 463

  171 foreach_var_lvalue: name_var_lvalue .

    $default  reduce using rule 171 (foreach_var_lvalue)


State 464

  170 foreach_var_lvalue: local_name_lvalue .

    $default  reduce using rule 170 (foreach_var_lvalue)


State 465

  188 condStart: L_IF '(' comma_expr ')' .

    $default  reduce using rule 188 (condStart)


State 466

  177 switch: L_SWITCH '(' comma_expr ')' . $@28 '{' switch_block '}'

    $default  reduce using rule 176 ($@28)

    $@28  go to state 511


State 467

  118 local_name_list: basic_type L_IDENTIFIER @12 L_ASSIGN . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 512
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 468

  120 local_name_list: basic_type L_LOCAL @13 L_ASSIGN . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 513
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 469

  121 local_name_list: local_name_list ',' optional_stars L_IDENTIFIER .
  124                | local_name_list ',' optional_stars L_IDENTIFIER . @14 L_ASSIGN expr0

    L_ASSIGN  reduce using rule 123 (@14)
    $default  reduce using rule 121 (local_name_list)

    @14  go to state 514


State 470

  122 local_name_list: local_name_list ',' optional_stars L_LOCAL .
  126                | local_name_list ',' optional_stars L_LOCAL . @15 L_ASSIGN expr0

    L_ASSIGN  reduce using rule 125 (@15)
    $default  reduce using rule 122 (local_name_list)

    @15  go to state 515


State 471

  144 while: @16 L_WHILE '(' comma_expr . ')' @17 statement
  222 comma_expr: comma_expr . $@30 ',' expr0

    ')'  shift, and go to state 516

    $default  reduce using rule 221 ($@30)

    $@30  go to state 313


State 472

  147 do: @18 L_DO statement L_WHILE . $@19 '(' comma_expr ')' ';'

    $default  reduce using rule 146 ($@19)

    $@19  go to state 517


State 473

  192 optional_else: L_ELSE @29 . statement

    error               shift, and go to state 270
    L_BREAK             shift, and go to state 271
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_CONTINUE          shift, and go to state 272
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_FOR               shift, and go to state 273
    L_FOREACH           shift, and go to state 274
    L_IDENTIFIER        shift, and go to state 99
    L_IF                shift, and go to state 275
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_RETURN            shift, and go to state 276
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SWITCH            shift, and go to state 277
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    ';'                 shift, and go to state 278
    '('                 shift, and go to state 112
    '{'                 shift, and go to state 279

    L_DO     reduce using rule 145 (@18)
    L_WHILE  reduce using rule 142 (@16)

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    block             go to state 282
    statement         go to state 518
    return            go to state 285
    while             go to state 286
    @16               go to state 287
    do                go to state 288
    @18               go to state 289
    for               go to state 290
    foreach           go to state 291
    switch            go to state 292
    condStart         go to state 293
    cond              go to state 294
    comma_expr        go to state 361
    expr0             go to state 219
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 474

  381 parse_command: L_PARSE_COMMAND note_start '(' expr0 ',' expr0 ',' . expr0 lvalue_list ')'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 519
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 475

  380 sscanf: L_SSCANF note_start '(' expr0 ',' expr0 lvalue_list . ')'
  383 lvalue_list: lvalue_list . ',' lvalue

    ')'  shift, and go to state 520
    ','  shift, and go to state 521


State 476

   94 identifier: L_IDENTIFIER .
  287 expr4: L_IDENTIFIER .
  293 name_lvalue: L_IDENTIFIER .
  363 function_name: L_IDENTIFIER .
  369 anchestor: L_IDENTIFIER .

    L_ASSIGN       reduce using rule 293 (name_lvalue)
    L_COLON_COLON  reduce using rule 369 (anchestor)
    L_DEC          reduce using rule 293 (name_lvalue)
    L_INC          reduce using rule 293 (name_lvalue)
    '('            reduce using rule 363 (function_name)
    ':'            reduce using rule 94 (identifier)
    $default       reduce using rule 287 (expr4)


State 477

   95 identifier: L_LOCAL .
  288 expr4: L_LOCAL .
  294 name_lvalue: L_LOCAL .
  364 function_name: L_LOCAL .

    L_ASSIGN  reduce using rule 294 (name_lvalue)
    L_DEC     reduce using rule 294 (name_lvalue)
    L_INC     reduce using rule 294 (name_lvalue)
    '('       reduce using rule 364 (function_name)
    ':'       reduce using rule 95 (identifier)
    $default  reduce using rule 288 (expr4)


State 478

  353 struct_init: identifier . ':' expr0

    ':'  shift, and go to state 522


State 479

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  354 struct_init: expr0 .

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 354 (struct_init)


State 480

  286 expr4: '(' '<' identifier '>' @38 note_start opt_struct_init . ')'

    ')'  shift, and go to state 523


State 481

  347 opt_struct_init: opt_struct_init2 . possible_comma
  348                | opt_struct_init2 . ',' error
  352 opt_struct_init2: opt_struct_init2 . ',' struct_init

    ','  shift, and go to state 524

    $default  reduce using rule 349 (possible_comma)

    possible_comma  go to state 525


State 482

  351 opt_struct_init2: struct_init .

    $default  reduce using rule 351 (opt_struct_init2)


State 483

  281 expr4: '(' '[' ':' note_start $@37 expr0 ']' . ')'

    ')'  shift, and go to state 526


State 484

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  341 m_expr_values: m_expr_values ';' expr0 .

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 341 (m_expr_values)


State 485

  339 m_expr_list2: m_expr_list2 ',' expr0 m_expr_values .
  341 m_expr_values: m_expr_values . ';' expr0

    ';'  shift, and go to state 422

    $default  reduce using rule 339 (m_expr_list2)


State 486

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  228      | expr0 '?' @32 expr0 @33 ':' expr0 .
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 228 (expr0)


State 487

  358 function_call: expr4 L_ARROW call_other_name @40 '(' arg_expr_list ')' .

    $default  reduce using rule 358 (function_call)


State 488

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  313 index_range: '[' '<' expr0 L_RANGE '<' expr0 . ']'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ']'     shift, and go to state 527


State 489

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  316 index_range: '[' '<' expr0 L_RANGE '>' expr0 . ']'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ']'     shift, and go to state 528


State 490

  312 index_range: '[' '<' expr0 L_RANGE expr0 ']' .

    $default  reduce using rule 312 (index_range)


State 491

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  317 index_range: '[' '>' expr0 L_RANGE '<' expr0 . ']'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ']'     shift, and go to state 529


State 492

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  318 index_range: '[' '>' expr0 L_RANGE '>' expr0 . ']'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ']'     shift, and go to state 530


State 493

  315 index_range: '[' '>' expr0 L_RANGE expr0 ']' .

    $default  reduce using rule 315 (index_range)


State 494

  311 index_range: '[' expr0 L_RANGE '<' expr0 ']' .

    $default  reduce using rule 311 (index_range)


State 495

  314 index_range: '[' expr0 L_RANGE '>' expr0 ']' .

    $default  reduce using rule 314 (index_range)


State 496

  332 arg_expr_list2: arg_expr_list2 ',' expr0 L_ELLIPSIS .

    $default  reduce using rule 332 (arg_expr_list2)


State 497

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  379 opt_catch_modifier: identifier expr0 .

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 379 (opt_catch_modifier)


State 498

  376 opt_catch_mod_list: opt_catch_mod_list ',' . opt_catch_modifier

    L_IDENTIFIER  shift, and go to state 69
    L_LOCAL       shift, and go to state 63

    identifier          go to state 445
    opt_catch_modifier  go to state 531


State 499

   30 inline_semi: ';' .
   33 inline_context_list: inline_context_list ';' . context_decl

    L_CLOSURE_DECL  shift, and go to state 25
    L_FLOAT_DECL    shift, and go to state 26
    L_INT           shift, and go to state 27
    L_MAPPING       shift, and go to state 28
    L_MIXED         shift, and go to state 29
    L_OBJECT        shift, and go to state 33
    L_STATUS        shift, and go to state 38
    L_STRING_DECL   shift, and go to state 39
    L_STRUCT        shift, and go to state 55
    L_SYMBOL_DECL   shift, and go to state 41
    L_VOID          shift, and go to state 44
    '<'             shift, and go to state 45

    $default  reduce using rule 30 (inline_semi)

    context_decl                go to state 532
    basic_non_void_type         go to state 48
    single_basic_non_void_type  go to state 49
    basic_type                  go to state 281
    local_name_list             go to state 451


State 500

   28 inline_opt_context: ':' inline_context_list inline_semi .

    $default  reduce using rule 28 (inline_opt_context)


State 501

   20 inline_func: L_FUNC inline_opt_type $@4 inline_opt_args $@5 inline_opt_context $@6 block .

    $default  reduce using rule 20 (inline_func)


State 502

  302 local_name_lvalue: basic_type L_IDENTIFIER .

    $default  reduce using rule 302 (local_name_lvalue)


State 503

  303 local_name_lvalue: basic_type L_LOCAL .

    $default  reduce using rule 303 (local_name_lvalue)


State 504

  152 for: L_FOR '(' @20 for_init_expr ';' . @21 for_expr ';' @22 for_expr ')' @23 statement

    $default  reduce using rule 149 (@21)

    @21  go to state 533


State 505

  157 comma_expr_decl: comma_expr_decl $@24 . ',' expr_decl

    ','  shift, and go to state 534


State 506

  159 expr_decl: local_name_lvalue L_ASSIGN . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 535
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 507

  173 foreach_in: ':' .

    $default  reduce using rule 173 (foreach_in)


State 508

  168 foreach_vars: foreach_vars ',' . foreach_var_decl

    L_CLOSURE_DECL  shift, and go to state 25
    L_FLOAT_DECL    shift, and go to state 26
    L_IDENTIFIER    shift, and go to state 150
    L_INT           shift, and go to state 27
    L_LOCAL         shift, and go to state 151
    L_MAPPING       shift, and go to state 28
    L_MIXED         shift, and go to state 29
    L_OBJECT        shift, and go to state 33
    L_STATUS        shift, and go to state 38
    L_STRING_DECL   shift, and go to state 39
    L_STRUCT        shift, and go to state 55
    L_SYMBOL_DECL   shift, and go to state 41
    L_VOID          shift, and go to state 44
    '<'             shift, and go to state 45

    basic_non_void_type         go to state 48
    single_basic_non_void_type  go to state 49
    basic_type                  go to state 453
    foreach_var_decl            go to state 536
    foreach_var_lvalue          go to state 461
    name_lvalue                 go to state 462
    name_var_lvalue             go to state 463
    local_name_lvalue           go to state 464


State 509

  172 foreach_in: identifier .

    $default  reduce using rule 172 (foreach_in)


State 510

  166 foreach: L_FOREACH '(' @25 foreach_vars foreach_in . @26 foreach_expr ')' $@27 statement

    $default  reduce using rule 164 (@26)

    @26  go to state 537


State 511

  177 switch: L_SWITCH '(' comma_expr ')' $@28 . '{' switch_block '}'

    '{'  shift, and go to state 538


State 512

  118 local_name_list: basic_type L_IDENTIFIER @12 L_ASSIGN expr0 .
  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 118 (local_name_list)


State 513

  120 local_name_list: basic_type L_LOCAL @13 L_ASSIGN expr0 .
  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 120 (local_name_list)


State 514

  124 local_name_list: local_name_list ',' optional_stars L_IDENTIFIER @14 . L_ASSIGN expr0

    L_ASSIGN  shift, and go to state 539


State 515

  126 local_name_list: local_name_list ',' optional_stars L_LOCAL @15 . L_ASSIGN expr0

    L_ASSIGN  shift, and go to state 540


State 516

  144 while: @16 L_WHILE '(' comma_expr ')' . @17 statement

    $default  reduce using rule 143 (@17)

    @17  go to state 541


State 517

  147 do: @18 L_DO statement L_WHILE $@19 . '(' comma_expr ')' ';'

    '('  shift, and go to state 542


State 518

  192 optional_else: L_ELSE @29 statement .

    $default  reduce using rule 192 (optional_else)


State 519

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  381 parse_command: L_PARSE_COMMAND note_start '(' expr0 ',' expr0 ',' expr0 . lvalue_list ')'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 382 (lvalue_list)

    lvalue_list  go to state 543


State 520

  380 sscanf: L_SSCANF note_start '(' expr0 ',' expr0 lvalue_list ')' .

    $default  reduce using rule 380 (sscanf)


State 521

  383 lvalue_list: lvalue_list ',' . lvalue

    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 634
    L_LOCAL             shift, and go to state 635
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '('                 shift, and go to state 184

    inline_func    go to state 113
    expr4          go to state 185
    name_lvalue    go to state 120
    lvalue         go to state 544
    function_call  go to state 122
    function_name  go to state 123
    anchestor      go to state 124
    catch          go to state 125
    sscanf         go to state 126
    parse_command  go to state 127


State 522

  353 struct_init: identifier ':' . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 545
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 523

  286 expr4: '(' '<' identifier '>' @38 note_start opt_struct_init ')' .

    $default  reduce using rule 286 (expr4)


State 524

  348 opt_struct_init: opt_struct_init2 ',' . error
  350 possible_comma: ',' .
  352 opt_struct_init2: opt_struct_init2 ',' . struct_init

    error               shift, and go to state 546
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 476
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 477
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    ')'  reduce using rule 350 (possible_comma)

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    identifier        go to state 478
    expr0             go to state 479
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    struct_init       go to state 547
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 525

  347 opt_struct_init: opt_struct_init2 possible_comma .

    $default  reduce using rule 347 (opt_struct_init)


State 526

  281 expr4: '(' '[' ':' note_start $@37 expr0 ']' ')' .

    $default  reduce using rule 281 (expr4)


State 527

  313 index_range: '[' '<' expr0 L_RANGE '<' expr0 ']' .

    $default  reduce using rule 313 (index_range)


State 528

  316 index_range: '[' '<' expr0 L_RANGE '>' expr0 ']' .

    $default  reduce using rule 316 (index_range)


State 529

  317 index_range: '[' '>' expr0 L_RANGE '<' expr0 ']' .

    $default  reduce using rule 317 (index_range)


State 530

  318 index_range: '[' '>' expr0 L_RANGE '>' expr0 ']' .

    $default  reduce using rule 318 (index_range)


State 531

  376 opt_catch_mod_list: opt_catch_mod_list ',' opt_catch_modifier .

    $default  reduce using rule 376 (opt_catch_mod_list)


State 532

   33 inline_context_list: inline_context_list ';' context_decl .

    $default  reduce using rule 33 (inline_context_list)


State 533

  152 for: L_FOR '(' @20 for_init_expr ';' @21 . for_expr ';' @22 for_expr ')' @23 statement

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    ';'  reduce using rule 161 (for_expr)

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    for_expr          go to state 548
    comma_expr        go to state 549
    expr0             go to state 219
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 534

  157 comma_expr_decl: comma_expr_decl $@24 ',' . expr_decl

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_CLOSURE_DECL      shift, and go to state 25
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_FLOAT_DECL        shift, and go to state 26
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_INT               shift, and go to state 27
    L_LOCAL             shift, and go to state 101
    L_MAPPING           shift, and go to state 28
    L_MIXED             shift, and go to state 29
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_OBJECT            shift, and go to state 33
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STATUS            shift, and go to state 38
    L_STRING            shift, and go to state 107
    L_STRING_DECL       shift, and go to state 39
    L_STRUCT            shift, and go to state 55
    L_SYMBOL            shift, and go to state 108
    L_SYMBOL_DECL       shift, and go to state 41
    L_VOID              shift, and go to state 44
    '&'                 shift, and go to state 109
    '<'                 shift, and go to state 45
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func                 go to state 113
    basic_non_void_type         go to state 48
    single_basic_non_void_type  go to state 49
    basic_type                  go to state 453
    cast                        go to state 114
    decl_cast                   go to state 115
    expr_decl                   go to state 550
    expr0                       go to state 457
    lvalue_reference            go to state 117
    pre_inc_dec                 go to state 118
    expr4                       go to state 119
    name_lvalue                 go to state 120
    lvalue                      go to state 121
    local_name_lvalue           go to state 458
    function_call               go to state 122
    function_name               go to state 123
    anchestor                   go to state 124
    catch                       go to state 125
    sscanf                      go to state 126
    parse_command               go to state 127


State 535

  159 expr_decl: local_name_lvalue L_ASSIGN expr0 .
  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 159 (expr_decl)


State 536

  168 foreach_vars: foreach_vars ',' foreach_var_decl .

    $default  reduce using rule 168 (foreach_vars)


State 537

  166 foreach: L_FOREACH '(' @25 foreach_vars foreach_in @26 . foreach_expr ')' $@27 statement

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    foreach_expr      go to state 551
    expr0             go to state 552
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 538

  177 switch: L_SWITCH '(' comma_expr ')' $@28 '{' . switch_block '}'

    L_CASE     shift, and go to state 553
    L_DEFAULT  shift, and go to state 554

    switch_block       go to state 555
    switch_statements  go to state 556
    switch_label       go to state 557
    case               go to state 558
    default            go to state 559


State 539

  124 local_name_list: local_name_list ',' optional_stars L_IDENTIFIER @14 L_ASSIGN . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 560
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 540

  126 local_name_list: local_name_list ',' optional_stars L_LOCAL @15 L_ASSIGN . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 561
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 541

  144 while: @16 L_WHILE '(' comma_expr ')' @17 . statement

    error               shift, and go to state 270
    L_BREAK             shift, and go to state 271
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_CONTINUE          shift, and go to state 272
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_FOR               shift, and go to state 273
    L_FOREACH           shift, and go to state 274
    L_IDENTIFIER        shift, and go to state 99
    L_IF                shift, and go to state 275
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_RETURN            shift, and go to state 276
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SWITCH            shift, and go to state 277
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    ';'                 shift, and go to state 278
    '('                 shift, and go to state 112
    '{'                 shift, and go to state 279

    L_DO     reduce using rule 145 (@18)
    L_WHILE  reduce using rule 142 (@16)

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    block             go to state 282
    statement         go to state 562
    return            go to state 285
    while             go to state 286
    @16               go to state 287
    do                go to state 288
    @18               go to state 289
    for               go to state 290
    foreach           go to state 291
    switch            go to state 292
    condStart         go to state 293
    cond              go to state 294
    comma_expr        go to state 361
    expr0             go to state 219
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 542

  147 do: @18 L_DO statement L_WHILE $@19 '(' . comma_expr ')' ';'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    comma_expr        go to state 563
    expr0             go to state 219
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 543

  381 parse_command: L_PARSE_COMMAND note_start '(' expr0 ',' expr0 ',' expr0 lvalue_list . ')'
  383 lvalue_list: lvalue_list . ',' lvalue

    ')'  shift, and go to state 564
    ','  shift, and go to state 521


State 544

  383 lvalue_list: lvalue_list ',' lvalue .

    $default  reduce using rule 383 (lvalue_list)


State 545

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  353 struct_init: identifier ':' expr0 .

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 353 (struct_init)


State 546

  225 expr0: error . L_ASSIGN expr0
  348 opt_struct_init: opt_struct_init2 ',' error .

    L_ASSIGN  shift, and go to state 138

    $default  reduce using rule 348 (opt_struct_init)


State 547

  352 opt_struct_init2: opt_struct_init2 ',' struct_init .

    $default  reduce using rule 352 (opt_struct_init2)


State 548

  152 for: L_FOR '(' @20 for_init_expr ';' @21 for_expr . ';' @22 for_expr ')' @23 statement

    ';'  shift, and go to state 565


State 549

  162 for_expr: comma_expr .
  222 comma_expr: comma_expr . $@30 ',' expr0

    ','       reduce using rule 221 ($@30)
    $default  reduce using rule 162 (for_expr)

    $@30  go to state 313


State 550

  157 comma_expr_decl: comma_expr_decl $@24 ',' expr_decl .

    $default  reduce using rule 157 (comma_expr_decl)


State 551

  166 foreach: L_FOREACH '(' @25 foreach_vars foreach_in @26 foreach_expr . ')' $@27 statement

    ')'  shift, and go to state 566


State 552

  174 foreach_expr: expr0 .
  175             | expr0 . L_RANGE expr0
  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ     shift, and go to state 163
    L_GE     shift, and go to state 164
    L_LAND   shift, and go to state 165
    L_LE     shift, and go to state 166
    L_LOR    shift, and go to state 167
    L_LSH    shift, and go to state 168
    L_NE     shift, and go to state 169
    L_RANGE  shift, and go to state 567
    L_RSH    shift, and go to state 170
    L_RSHL   shift, and go to state 171
    '?'      shift, and go to state 172
    '|'      shift, and go to state 173
    '^'      shift, and go to state 174
    '&'      shift, and go to state 175
    '<'      shift, and go to state 176
    '>'      shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '*'      shift, and go to state 180
    '/'      shift, and go to state 181
    '%'      shift, and go to state 182

    $default  reduce using rule 174 (foreach_expr)


State 553

  183 case: L_CASE . case_label ':'
  184     | L_CASE . case_label L_RANGE case_label ':'

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    L_STRING  shift, and go to state 56
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 572

    case_label       go to state 573
    constant         go to state 574
    string_constant  go to state 575


State 554

  187 default: L_DEFAULT . ':'

    ':'  shift, and go to state 576


State 555

  177 switch: L_SWITCH '(' comma_expr ')' $@28 '{' switch_block . '}'
  178 switch_block: switch_block . switch_statements

    L_CASE     shift, and go to state 553
    L_DEFAULT  shift, and go to state 554
    '}'        shift, and go to state 577

    switch_statements  go to state 578
    switch_label       go to state 557
    case               go to state 558
    default            go to state 559


State 556

  179 switch_block: switch_statements .

    $default  reduce using rule 179 (switch_block)


State 557

  180 switch_statements: switch_label . statements_block

    $default  reduce using rule 110 ($@11)

    statements_block  go to state 579
    $@11              go to state 351


State 558

  181 switch_label: case .

    $default  reduce using rule 181 (switch_label)


State 559

  182 switch_label: default .

    $default  reduce using rule 182 (switch_label)


State 560

  124 local_name_list: local_name_list ',' optional_stars L_IDENTIFIER @14 L_ASSIGN expr0 .
  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 124 (local_name_list)


State 561

  126 local_name_list: local_name_list ',' optional_stars L_LOCAL @15 L_ASSIGN expr0 .
  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 126 (local_name_list)


State 562

  144 while: @16 L_WHILE '(' comma_expr ')' @17 statement .

    $default  reduce using rule 144 (while)


State 563

  147 do: @18 L_DO statement L_WHILE $@19 '(' comma_expr . ')' ';'
  222 comma_expr: comma_expr . $@30 ',' expr0

    ')'  shift, and go to state 580

    $default  reduce using rule 221 ($@30)

    $@30  go to state 313


State 564

  381 parse_command: L_PARSE_COMMAND note_start '(' expr0 ',' expr0 ',' expr0 lvalue_list ')' .

    $default  reduce using rule 381 (parse_command)


State 565

  152 for: L_FOR '(' @20 for_init_expr ';' @21 for_expr ';' . @22 for_expr ')' @23 statement

    $default  reduce using rule 150 (@22)

    @22  go to state 581


State 566

  166 foreach: L_FOREACH '(' @25 foreach_vars foreach_in @26 foreach_expr ')' . $@27 statement

    $default  reduce using rule 165 ($@27)

    $@27  go to state 582


State 567

  175 foreach_expr: expr0 L_RANGE . expr0

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 583
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 568

  212 constant: L_NOT . constant

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 585


State 569

  214 constant: L_NUMBER .

    $default  reduce using rule 214 (constant)


State 570

  211 constant: '-' . constant

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 586


State 571

  213 constant: '~' . constant

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 587


State 572

  210 constant: '(' . constant ')'
  219 string_constant: '(' . string_constant ')'

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    L_STRING  shift, and go to state 56
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 572

    constant         go to state 588
    string_constant  go to state 71


State 573

  183 case: L_CASE case_label . ':'
  184     | L_CASE case_label . L_RANGE case_label ':'

    L_RANGE  shift, and go to state 589
    ':'      shift, and go to state 590


State 574

  185 case_label: constant .
  193 constant: constant . '|' constant
  194         | constant . '^' constant
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  198         | constant . '>' constant
  199         | constant . L_GE constant
  200         | constant . '<' constant
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  206         | constant . '-' constant
  207         | constant . '*' constant
  208         | constant . '%' constant
  209         | constant . '/' constant

    L_EQ    shift, and go to state 591
    L_GE    shift, and go to state 592
    L_LE    shift, and go to state 593
    L_LSH   shift, and go to state 594
    L_NE    shift, and go to state 595
    L_RSH   shift, and go to state 596
    L_RSHL  shift, and go to state 597
    '|'     shift, and go to state 598
    '^'     shift, and go to state 599
    '&'     shift, and go to state 600
    '<'     shift, and go to state 601
    '>'     shift, and go to state 602
    '+'     shift, and go to state 603
    '-'     shift, and go to state 604
    '*'     shift, and go to state 605
    '/'     shift, and go to state 606
    '%'     shift, and go to state 607

    $default  reduce using rule 185 (case_label)


State 575

  186 case_label: string_constant .
  216 string_constant: string_constant . '+' L_STRING
  218                | string_constant . '+' L_STRING L_STRING

    '+'  shift, and go to state 72

    $default  reduce using rule 186 (case_label)


State 576

  187 default: L_DEFAULT ':' .

    $default  reduce using rule 187 (default)


State 577

  177 switch: L_SWITCH '(' comma_expr ')' $@28 '{' switch_block '}' .

    $default  reduce using rule 177 (switch)


State 578

  178 switch_block: switch_block switch_statements .

    $default  reduce using rule 178 (switch_block)


State 579

  180 switch_statements: switch_label statements_block .

    $default  reduce using rule 180 (switch_statements)


State 580

  147 do: @18 L_DO statement L_WHILE $@19 '(' comma_expr ')' . ';'

    ';'  shift, and go to state 608


State 581

  152 for: L_FOR '(' @20 for_init_expr ';' @21 for_expr ';' @22 . for_expr ')' @23 statement

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 640
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 641
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    ')'  reduce using rule 161 (for_expr)

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    for_expr          go to state 609
    comma_expr        go to state 549
    expr0             go to state 219
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 582

  166 foreach: L_FOREACH '(' @25 foreach_vars foreach_in @26 foreach_expr ')' $@27 . statement

    error               shift, and go to state 270
    L_BREAK             shift, and go to state 271
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_CONTINUE          shift, and go to state 272
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_FOR               shift, and go to state 273
    L_FOREACH           shift, and go to state 274
    L_IDENTIFIER        shift, and go to state 99
    L_IF                shift, and go to state 275
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_RETURN            shift, and go to state 276
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SWITCH            shift, and go to state 277
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    ';'                 shift, and go to state 278
    '('                 shift, and go to state 112
    '{'                 shift, and go to state 279

    L_DO     reduce using rule 145 (@18)
    L_WHILE  reduce using rule 142 (@16)

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    block             go to state 282
    statement         go to state 610
    return            go to state 285
    while             go to state 286
    @16               go to state 287
    do                go to state 288
    @18               go to state 289
    for               go to state 290
    foreach           go to state 291
    switch            go to state 292
    condStart         go to state 293
    cond              go to state 294
    comma_expr        go to state 361
    expr0             go to state 219
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 583

  175 foreach_expr: expr0 L_RANGE expr0 .
  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182

    $default  reduce using rule 175 (foreach_expr)


State 584

  210 constant: '(' . constant ')'

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 588


State 585

  193 constant: constant . '|' constant
  194         | constant . '^' constant
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  198         | constant . '>' constant
  199         | constant . L_GE constant
  200         | constant . '<' constant
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  206         | constant . '-' constant
  207         | constant . '*' constant
  208         | constant . '%' constant
  209         | constant . '/' constant
  212         | L_NOT constant .

    $default  reduce using rule 212 (constant)


State 586

  193 constant: constant . '|' constant
  194         | constant . '^' constant
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  198         | constant . '>' constant
  199         | constant . L_GE constant
  200         | constant . '<' constant
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  206         | constant . '-' constant
  207         | constant . '*' constant
  208         | constant . '%' constant
  209         | constant . '/' constant
  211         | '-' constant .

    $default  reduce using rule 211 (constant)


State 587

  193 constant: constant . '|' constant
  194         | constant . '^' constant
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  198         | constant . '>' constant
  199         | constant . L_GE constant
  200         | constant . '<' constant
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  206         | constant . '-' constant
  207         | constant . '*' constant
  208         | constant . '%' constant
  209         | constant . '/' constant
  213         | '~' constant .

    $default  reduce using rule 213 (constant)


State 588

  193 constant: constant . '|' constant
  194         | constant . '^' constant
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  198         | constant . '>' constant
  199         | constant . L_GE constant
  200         | constant . '<' constant
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  206         | constant . '-' constant
  207         | constant . '*' constant
  208         | constant . '%' constant
  209         | constant . '/' constant
  210         | '(' constant . ')'

    L_EQ    shift, and go to state 591
    L_GE    shift, and go to state 592
    L_LE    shift, and go to state 593
    L_LSH   shift, and go to state 594
    L_NE    shift, and go to state 595
    L_RSH   shift, and go to state 596
    L_RSHL  shift, and go to state 597
    '|'     shift, and go to state 598
    '^'     shift, and go to state 599
    '&'     shift, and go to state 600
    '<'     shift, and go to state 601
    '>'     shift, and go to state 602
    '+'     shift, and go to state 603
    '-'     shift, and go to state 604
    '*'     shift, and go to state 605
    '/'     shift, and go to state 606
    '%'     shift, and go to state 607
    ')'     shift, and go to state 611


State 589

  184 case: L_CASE case_label L_RANGE . case_label ':'

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    L_STRING  shift, and go to state 56
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 572

    case_label       go to state 612
    constant         go to state 574
    string_constant  go to state 575


State 590

  183 case: L_CASE case_label ':' .

    $default  reduce using rule 183 (case)


State 591

  196 constant: constant L_EQ . constant

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 613


State 592

  199 constant: constant L_GE . constant

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 614


State 593

  201 constant: constant L_LE . constant

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 615


State 594

  202 constant: constant L_LSH . constant

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 616


State 595

  197 constant: constant L_NE . constant

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 617


State 596

  203 constant: constant L_RSH . constant

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 618


State 597

  204 constant: constant L_RSHL . constant

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 619


State 598

  193 constant: constant '|' . constant

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 620


State 599

  194 constant: constant '^' . constant

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 621


State 600

  195 constant: constant '&' . constant

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 622


State 601

  200 constant: constant '<' . constant

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 623


State 602

  198 constant: constant '>' . constant

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 624


State 603

  205 constant: constant '+' . constant

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 625


State 604

  206 constant: constant '-' . constant

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 626


State 605

  207 constant: constant '*' . constant

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 627


State 606

  209 constant: constant '/' . constant

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 628


State 607

  208 constant: constant '%' . constant

    L_NOT     shift, and go to state 568
    L_NUMBER  shift, and go to state 569
    '-'       shift, and go to state 570
    '~'       shift, and go to state 571
    '('       shift, and go to state 584

    constant  go to state 629


State 608

  147 do: @18 L_DO statement L_WHILE $@19 '(' comma_expr ')' ';' .

    $default  reduce using rule 147 (do)


State 609

  152 for: L_FOR '(' @20 for_init_expr ';' @21 for_expr ';' @22 for_expr . ')' @23 statement

    ')'  shift, and go to state 630


State 610

  166 foreach: L_FOREACH '(' @25 foreach_vars foreach_in @26 foreach_expr ')' $@27 statement .

    $default  reduce using rule 166 (foreach)


State 611

  210 constant: '(' constant ')' .

    $default  reduce using rule 210 (constant)


State 612

  184 case: L_CASE case_label L_RANGE case_label . ':'

    ':'  shift, and go to state 631


State 613

  193 constant: constant . '|' constant
  194         | constant . '^' constant
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  196         | constant L_EQ constant .
  197         | constant . L_NE constant
  198         | constant . '>' constant
  199         | constant . L_GE constant
  200         | constant . '<' constant
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  206         | constant . '-' constant
  207         | constant . '*' constant
  208         | constant . '%' constant
  209         | constant . '/' constant

    L_GE    shift, and go to state 592
    L_LE    shift, and go to state 593
    L_LSH   shift, and go to state 594
    L_RSH   shift, and go to state 596
    L_RSHL  shift, and go to state 597
    '<'     shift, and go to state 601
    '>'     shift, and go to state 602
    '+'     shift, and go to state 603
    '-'     shift, and go to state 604
    '*'     shift, and go to state 605
    '/'     shift, and go to state 606
    '%'     shift, and go to state 607

    $default  reduce using rule 196 (constant)


State 614

  193 constant: constant . '|' constant
  194         | constant . '^' constant
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  198         | constant . '>' constant
  199         | constant . L_GE constant
  199         | constant L_GE constant .
  200         | constant . '<' constant
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  206         | constant . '-' constant
  207         | constant . '*' constant
  208         | constant . '%' constant
  209         | constant . '/' constant

    L_LSH   shift, and go to state 594
    L_RSH   shift, and go to state 596
    L_RSHL  shift, and go to state 597
    '+'     shift, and go to state 603
    '-'     shift, and go to state 604
    '*'     shift, and go to state 605
    '/'     shift, and go to state 606
    '%'     shift, and go to state 607

    $default  reduce using rule 199 (constant)


State 615

  193 constant: constant . '|' constant
  194         | constant . '^' constant
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  198         | constant . '>' constant
  199         | constant . L_GE constant
  200         | constant . '<' constant
  201         | constant . L_LE constant
  201         | constant L_LE constant .
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  206         | constant . '-' constant
  207         | constant . '*' constant
  208         | constant . '%' constant
  209         | constant . '/' constant

    L_LSH   shift, and go to state 594
    L_RSH   shift, and go to state 596
    L_RSHL  shift, and go to state 597
    '+'     shift, and go to state 603
    '-'     shift, and go to state 604
    '*'     shift, and go to state 605
    '/'     shift, and go to state 606
    '%'     shift, and go to state 607

    $default  reduce using rule 201 (constant)


State 616

  193 constant: constant . '|' constant
  194         | constant . '^' constant
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  198         | constant . '>' constant
  199         | constant . L_GE constant
  200         | constant . '<' constant
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  202         | constant L_LSH constant .
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  206         | constant . '-' constant
  207         | constant . '*' constant
  208         | constant . '%' constant
  209         | constant . '/' constant

    '+'  shift, and go to state 603
    '-'  shift, and go to state 604
    '*'  shift, and go to state 605
    '/'  shift, and go to state 606
    '%'  shift, and go to state 607

    $default  reduce using rule 202 (constant)


State 617

  193 constant: constant . '|' constant
  194         | constant . '^' constant
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  197         | constant L_NE constant .
  198         | constant . '>' constant
  199         | constant . L_GE constant
  200         | constant . '<' constant
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  206         | constant . '-' constant
  207         | constant . '*' constant
  208         | constant . '%' constant
  209         | constant . '/' constant

    L_GE    shift, and go to state 592
    L_LE    shift, and go to state 593
    L_LSH   shift, and go to state 594
    L_RSH   shift, and go to state 596
    L_RSHL  shift, and go to state 597
    '<'     shift, and go to state 601
    '>'     shift, and go to state 602
    '+'     shift, and go to state 603
    '-'     shift, and go to state 604
    '*'     shift, and go to state 605
    '/'     shift, and go to state 606
    '%'     shift, and go to state 607

    $default  reduce using rule 197 (constant)


State 618

  193 constant: constant . '|' constant
  194         | constant . '^' constant
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  198         | constant . '>' constant
  199         | constant . L_GE constant
  200         | constant . '<' constant
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  203         | constant L_RSH constant .
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  206         | constant . '-' constant
  207         | constant . '*' constant
  208         | constant . '%' constant
  209         | constant . '/' constant

    '+'  shift, and go to state 603
    '-'  shift, and go to state 604
    '*'  shift, and go to state 605
    '/'  shift, and go to state 606
    '%'  shift, and go to state 607

    $default  reduce using rule 203 (constant)


State 619

  193 constant: constant . '|' constant
  194         | constant . '^' constant
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  198         | constant . '>' constant
  199         | constant . L_GE constant
  200         | constant . '<' constant
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  204         | constant L_RSHL constant .
  205         | constant . '+' constant
  206         | constant . '-' constant
  207         | constant . '*' constant
  208         | constant . '%' constant
  209         | constant . '/' constant

    '+'  shift, and go to state 603
    '-'  shift, and go to state 604
    '*'  shift, and go to state 605
    '/'  shift, and go to state 606
    '%'  shift, and go to state 607

    $default  reduce using rule 204 (constant)


State 620

  193 constant: constant . '|' constant
  193         | constant '|' constant .
  194         | constant . '^' constant
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  198         | constant . '>' constant
  199         | constant . L_GE constant
  200         | constant . '<' constant
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  206         | constant . '-' constant
  207         | constant . '*' constant
  208         | constant . '%' constant
  209         | constant . '/' constant

    L_EQ    shift, and go to state 591
    L_GE    shift, and go to state 592
    L_LE    shift, and go to state 593
    L_LSH   shift, and go to state 594
    L_NE    shift, and go to state 595
    L_RSH   shift, and go to state 596
    L_RSHL  shift, and go to state 597
    '^'     shift, and go to state 599
    '&'     shift, and go to state 600
    '<'     shift, and go to state 601
    '>'     shift, and go to state 602
    '+'     shift, and go to state 603
    '-'     shift, and go to state 604
    '*'     shift, and go to state 605
    '/'     shift, and go to state 606
    '%'     shift, and go to state 607

    $default  reduce using rule 193 (constant)


State 621

  193 constant: constant . '|' constant
  194         | constant . '^' constant
  194         | constant '^' constant .
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  198         | constant . '>' constant
  199         | constant . L_GE constant
  200         | constant . '<' constant
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  206         | constant . '-' constant
  207         | constant . '*' constant
  208         | constant . '%' constant
  209         | constant . '/' constant

    L_EQ    shift, and go to state 591
    L_GE    shift, and go to state 592
    L_LE    shift, and go to state 593
    L_LSH   shift, and go to state 594
    L_NE    shift, and go to state 595
    L_RSH   shift, and go to state 596
    L_RSHL  shift, and go to state 597
    '&'     shift, and go to state 600
    '<'     shift, and go to state 601
    '>'     shift, and go to state 602
    '+'     shift, and go to state 603
    '-'     shift, and go to state 604
    '*'     shift, and go to state 605
    '/'     shift, and go to state 606
    '%'     shift, and go to state 607

    $default  reduce using rule 194 (constant)


State 622

  193 constant: constant . '|' constant
  194         | constant . '^' constant
  195         | constant . '&' constant
  195         | constant '&' constant .
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  198         | constant . '>' constant
  199         | constant . L_GE constant
  200         | constant . '<' constant
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  206         | constant . '-' constant
  207         | constant . '*' constant
  208         | constant . '%' constant
  209         | constant . '/' constant

    L_EQ    shift, and go to state 591
    L_GE    shift, and go to state 592
    L_LE    shift, and go to state 593
    L_LSH   shift, and go to state 594
    L_NE    shift, and go to state 595
    L_RSH   shift, and go to state 596
    L_RSHL  shift, and go to state 597
    '<'     shift, and go to state 601
    '>'     shift, and go to state 602
    '+'     shift, and go to state 603
    '-'     shift, and go to state 604
    '*'     shift, and go to state 605
    '/'     shift, and go to state 606
    '%'     shift, and go to state 607

    $default  reduce using rule 195 (constant)


State 623

  193 constant: constant . '|' constant
  194         | constant . '^' constant
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  198         | constant . '>' constant
  199         | constant . L_GE constant
  200         | constant . '<' constant
  200         | constant '<' constant .
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  206         | constant . '-' constant
  207         | constant . '*' constant
  208         | constant . '%' constant
  209         | constant . '/' constant

    L_LSH   shift, and go to state 594
    L_RSH   shift, and go to state 596
    L_RSHL  shift, and go to state 597
    '+'     shift, and go to state 603
    '-'     shift, and go to state 604
    '*'     shift, and go to state 605
    '/'     shift, and go to state 606
    '%'     shift, and go to state 607

    $default  reduce using rule 200 (constant)


State 624

  193 constant: constant . '|' constant
  194         | constant . '^' constant
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  198         | constant . '>' constant
  198         | constant '>' constant .
  199         | constant . L_GE constant
  200         | constant . '<' constant
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  206         | constant . '-' constant
  207         | constant . '*' constant
  208         | constant . '%' constant
  209         | constant . '/' constant

    L_LSH   shift, and go to state 594
    L_RSH   shift, and go to state 596
    L_RSHL  shift, and go to state 597
    '+'     shift, and go to state 603
    '-'     shift, and go to state 604
    '*'     shift, and go to state 605
    '/'     shift, and go to state 606
    '%'     shift, and go to state 607

    $default  reduce using rule 198 (constant)


State 625

  193 constant: constant . '|' constant
  194         | constant . '^' constant
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  198         | constant . '>' constant
  199         | constant . L_GE constant
  200         | constant . '<' constant
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  205         | constant '+' constant .
  206         | constant . '-' constant
  207         | constant . '*' constant
  208         | constant . '%' constant
  209         | constant . '/' constant

    '*'  shift, and go to state 605
    '/'  shift, and go to state 606
    '%'  shift, and go to state 607

    $default  reduce using rule 205 (constant)


State 626

  193 constant: constant . '|' constant
  194         | constant . '^' constant
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  198         | constant . '>' constant
  199         | constant . L_GE constant
  200         | constant . '<' constant
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  206         | constant . '-' constant
  206         | constant '-' constant .
  207         | constant . '*' constant
  208         | constant . '%' constant
  209         | constant . '/' constant

    '*'  shift, and go to state 605
    '/'  shift, and go to state 606
    '%'  shift, and go to state 607

    $default  reduce using rule 206 (constant)


State 627

  193 constant: constant . '|' constant
  194         | constant . '^' constant
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  198         | constant . '>' constant
  199         | constant . L_GE constant
  200         | constant . '<' constant
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  206         | constant . '-' constant
  207         | constant . '*' constant
  207         | constant '*' constant .
  208         | constant . '%' constant
  209         | constant . '/' constant

    $default  reduce using rule 207 (constant)


State 628

  193 constant: constant . '|' constant
  194         | constant . '^' constant
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  198         | constant . '>' constant
  199         | constant . L_GE constant
  200         | constant . '<' constant
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  206         | constant . '-' constant
  207         | constant . '*' constant
  208         | constant . '%' constant
  209         | constant . '/' constant
  209         | constant '/' constant .

    $default  reduce using rule 209 (constant)


State 629

  193 constant: constant . '|' constant
  194         | constant . '^' constant
  195         | constant . '&' constant
  196         | constant . L_EQ constant
  197         | constant . L_NE constant
  198         | constant . '>' constant
  199         | constant . L_GE constant
  200         | constant . '<' constant
  201         | constant . L_LE constant
  202         | constant . L_LSH constant
  203         | constant . L_RSH constant
  204         | constant . L_RSHL constant
  205         | constant . '+' constant
  206         | constant . '-' constant
  207         | constant . '*' constant
  208         | constant . '%' constant
  208         | constant '%' constant .
  209         | constant . '/' constant

    $default  reduce using rule 208 (constant)


State 630

  152 for: L_FOR '(' @20 for_init_expr ';' @21 for_expr ';' @22 for_expr ')' . @23 statement

    $default  reduce using rule 151 (@23)

    @23  go to state 632


State 631

  184 case: L_CASE case_label L_RANGE case_label ':' .

    $default  reduce using rule 184 (case)


State 632

  152 for: L_FOR '(' @20 for_init_expr ';' @21 for_expr ';' @22 for_expr ')' @23 . statement

    error               shift, and go to state 270
    L_BREAK             shift, and go to state 271
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_CONTINUE          shift, and go to state 272
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_FOR               shift, and go to state 273
    L_FOREACH           shift, and go to state 274
    L_IDENTIFIER        shift, and go to state 99
    L_IF                shift, and go to state 275
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_RETURN            shift, and go to state 276
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SWITCH            shift, and go to state 277
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    ';'                 shift, and go to state 278
    '('                 shift, and go to state 112
    '{'                 shift, and go to state 279

    L_DO     reduce using rule 145 (@18)
    L_WHILE  reduce using rule 142 (@16)

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    block             go to state 282
    statement         go to state 633
    return            go to state 285
    while             go to state 286
    @16               go to state 287
    do                go to state 288
    @18               go to state 289
    for               go to state 290
    foreach           go to state 291
    switch            go to state 292
    condStart         go to state 293
    cond              go to state 294
    comma_expr        go to state 361
    expr0             go to state 219
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 633

  152 for: L_FOR '(' @20 for_init_expr ';' @21 for_expr ';' @22 for_expr ')' @23 statement .

    $default  reduce using rule 152 (for)


State 634

  287 expr4: L_IDENTIFIER .
  293 name_lvalue: L_IDENTIFIER .
  363 function_name: L_IDENTIFIER .
  369 anchestor: L_IDENTIFIER .

    L_ARROW        reduce using rule 287 (expr4)
    L_COLON_COLON  reduce using rule 369 (anchestor)
    '['            reduce using rule 287 (expr4)
    '('            reduce using rule 363 (function_name)
    $default       reduce using rule 293 (name_lvalue)


State 635

  288 expr4: L_LOCAL .
  294 name_lvalue: L_LOCAL .
  364 function_name: L_LOCAL .

    L_ARROW   reduce using rule 288 (expr4)
    '['       reduce using rule 288 (expr4)
    '('       reduce using rule 364 (function_name)
    $default  reduce using rule 294 (name_lvalue)


State 636

  289 expr4: expr4 L_ARROW . struct_member_name
  299 lvalue: expr4 L_ARROW . struct_member_name
  358 function_call: expr4 L_ARROW . call_other_name @40 '(' arg_expr_list ')'

    L_IDENTIFIER  shift, and go to state 69
    L_LOCAL       shift, and go to state 63
    L_STRING      shift, and go to state 244
    '('           shift, and go to state 245

    identifier          go to state 246
    struct_member_name  go to state 642
    call_other_name     go to state 248


State 637

  292 expr4: expr4 '[' . expr0 ',' expr0 ']'
  297 lvalue: expr4 '[' . expr0 ',' expr0 ']'
  304 index_expr: '[' . expr0 ']'
  305           | '[' . '<' expr0 ']'
  306           | '[' . '>' expr0 ']'
  307 index_range: '[' . L_RANGE expr0 ']'
  308            | '[' . L_RANGE '<' expr0 ']'
  309            | '[' . L_RANGE '>' expr0 ']'
  310            | '[' . expr0 L_RANGE expr0 ']'
  311            | '[' . expr0 L_RANGE '<' expr0 ']'
  312            | '[' . '<' expr0 L_RANGE expr0 ']'
  313            | '[' . '<' expr0 L_RANGE '<' expr0 ']'
  314            | '[' . expr0 L_RANGE '>' expr0 ']'
  315            | '[' . '>' expr0 L_RANGE expr0 ']'
  316            | '[' . '<' expr0 L_RANGE '>' expr0 ']'
  317            | '[' . '>' expr0 L_RANGE '<' expr0 ']'
  318            | '[' . '>' expr0 L_RANGE '>' expr0 ']'
  319            | '[' . expr0 L_RANGE ']'
  320            | '[' . '<' expr0 L_RANGE ']'
  321            | '[' . '>' expr0 L_RANGE ']'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_RANGE             shift, and go to state 249
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '<'                 shift, and go to state 250
    '>'                 shift, and go to state 251
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 643
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 638

  290 expr4: expr4 index_expr .
  296 lvalue: expr4 index_expr .

    L_ARROW   reduce using rule 290 (expr4)
    '['       reduce using rule 290 (expr4)
    $default  reduce using rule 296 (lvalue)


State 639

  291 expr4: expr4 index_range .
  298 lvalue: expr4 index_range .

    L_ARROW   reduce using rule 291 (expr4)
    '['       reduce using rule 291 (expr4)
    $default  reduce using rule 298 (lvalue)


State 640

  287 expr4: L_IDENTIFIER .
  293 name_lvalue: L_IDENTIFIER .
  363 function_name: L_IDENTIFIER .
  369 anchestor: L_IDENTIFIER .

    L_ASSIGN       reduce using rule 293 (name_lvalue)
    L_COLON_COLON  reduce using rule 369 (anchestor)
    L_DEC          reduce using rule 293 (name_lvalue)
    L_INC          reduce using rule 293 (name_lvalue)
    '('            reduce using rule 363 (function_name)
    $default       reduce using rule 287 (expr4)


State 641

  288 expr4: L_LOCAL .
  294 name_lvalue: L_LOCAL .
  364 function_name: L_LOCAL .

    L_ASSIGN  reduce using rule 294 (name_lvalue)
    L_DEC     reduce using rule 294 (name_lvalue)
    L_INC     reduce using rule 294 (name_lvalue)
    '('       reduce using rule 364 (function_name)
    $default  reduce using rule 288 (expr4)


State 642

  289 expr4: expr4 L_ARROW struct_member_name .
  299 lvalue: expr4 L_ARROW struct_member_name .

    L_ARROW   reduce using rule 289 (expr4)
    '['       reduce using rule 289 (expr4)
    $default  reduce using rule 299 (lvalue)


State 643

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  292 expr4: expr4 '[' expr0 . ',' expr0 ']'
  297 lvalue: expr4 '[' expr0 . ',' expr0 ']'
  304 index_expr: '[' expr0 . ']'
  310 index_range: '[' expr0 . L_RANGE expr0 ']'
  311            | '[' expr0 . L_RANGE '<' expr0 ']'
  314            | '[' expr0 . L_RANGE '>' expr0 ']'
  319            | '[' expr0 . L_RANGE ']'

    L_EQ     shift, and go to state 163
    L_GE     shift, and go to state 164
    L_LAND   shift, and go to state 165
    L_LE     shift, and go to state 166
    L_LOR    shift, and go to state 167
    L_LSH    shift, and go to state 168
    L_NE     shift, and go to state 169
    L_RANGE  shift, and go to state 326
    L_RSH    shift, and go to state 170
    L_RSHL   shift, and go to state 171
    '?'      shift, and go to state 172
    '|'      shift, and go to state 173
    '^'      shift, and go to state 174
    '&'      shift, and go to state 175
    '<'      shift, and go to state 176
    '>'      shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '*'      shift, and go to state 180
    '/'      shift, and go to state 181
    '%'      shift, and go to state 182
    ','      shift, and go to state 644
    ']'      shift, and go to state 328


State 644

  292 expr4: expr4 '[' expr0 ',' . expr0 ']'
  297 lvalue: expr4 '[' expr0 ',' . expr0 ']'

    error               shift, and go to state 90
    L_CATCH             shift, and go to state 91
    L_CLOSURE           shift, and go to state 92
    L_COLON_COLON       shift, and go to state 93
    L_DEC               shift, and go to state 94
    L_DUMMY             shift, and go to state 95
    L_FUNC              shift, and go to state 96
    L_BEGIN_INLINE      shift, and go to state 97
    L_FLOAT             shift, and go to state 98
    L_IDENTIFIER        shift, and go to state 99
    L_INC               shift, and go to state 100
    L_LOCAL             shift, and go to state 101
    L_NOT               shift, and go to state 102
    L_NUMBER            shift, and go to state 103
    L_PARSE_COMMAND     shift, and go to state 104
    L_QUOTED_AGGREGATE  shift, and go to state 105
    L_SSCANF            shift, and go to state 106
    L_STRING            shift, and go to state 107
    L_SYMBOL            shift, and go to state 108
    '&'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '~'                 shift, and go to state 111
    '('                 shift, and go to state 112

    inline_func       go to state 113
    cast              go to state 114
    decl_cast         go to state 115
    expr0             go to state 645
    lvalue_reference  go to state 117
    pre_inc_dec       go to state 118
    expr4             go to state 119
    name_lvalue       go to state 120
    lvalue            go to state 121
    function_call     go to state 122
    function_name     go to state 123
    anchestor         go to state 124
    catch             go to state 125
    sscanf            go to state 126
    parse_command     go to state 127


State 645

  228 expr0: expr0 . '?' @32 expr0 @33 ':' expr0
  230      | expr0 . L_LOR @34 expr0
  232      | expr0 . L_LAND @35 expr0
  233      | expr0 . '|' expr0
  234      | expr0 . '^' expr0
  235      | expr0 . '&' expr0
  236      | expr0 . L_EQ expr0
  237      | expr0 . L_NE expr0
  238      | expr0 . '>' expr0
  239      | expr0 . L_GE expr0
  240      | expr0 . '<' expr0
  241      | expr0 . L_LE expr0
  242      | expr0 . L_LSH expr0
  243      | expr0 . L_RSH expr0
  244      | expr0 . L_RSHL expr0
  246      | expr0 . '+' @36 expr0
  247      | expr0 . '-' expr0
  248      | expr0 . '*' expr0
  249      | expr0 . '%' expr0
  250      | expr0 . '/' expr0
  292 expr4: expr4 '[' expr0 ',' expr0 . ']'
  297 lvalue: expr4 '[' expr0 ',' expr0 . ']'

    L_EQ    shift, and go to state 163
    L_GE    shift, and go to state 164
    L_LAND  shift, and go to state 165
    L_LE    shift, and go to state 166
    L_LOR   shift, and go to state 167
    L_LSH   shift, and go to state 168
    L_NE    shift, and go to state 169
    L_RSH   shift, and go to state 170
    L_RSHL  shift, and go to state 171
    '?'     shift, and go to state 172
    '|'     shift, and go to state 173
    '^'     shift, and go to state 174
    '&'     shift, and go to state 175
    '<'     shift, and go to state 176
    '>'     shift, and go to state 177
    '+'     shift, and go to state 178
    '-'     shift, and go to state 179
    '*'     shift, and go to state 180
    '/'     shift, and go to state 181
    '%'     shift, and go to state 182
    ']'     shift, and go to state 646


State 646

  292 expr4: expr4 '[' expr0 ',' expr0 ']' .
  297 lvalue: expr4 '[' expr0 ',' expr0 ']' .

    L_ARROW   reduce using rule 292 (expr4)
    '['       reduce using rule 292 (expr4)
    $default  reduce using rule 297 (lvalue)
